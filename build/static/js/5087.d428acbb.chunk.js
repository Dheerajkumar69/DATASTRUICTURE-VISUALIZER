"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[5087],{55087:(e,n,t)=>{t.r(n),t.d(n,{default:()=>ce});var r,o,i,s,a,l,d,c,h,m,g,u,x,p,f,v,A,y,j,w,b,k,C,E,D,S,M=t(89379),B=t(57528),z=t(9950),T=t(44752),F=t(54826),I=t(42074),L=t(58916),N=t(85283),P=t(44414);const G=(0,z.lazy)(()=>Promise.all([t.e(2793),t.e(4412),t.e(8925),t.e(7874)]).then(t.bind(t,67874))),_=T.Ay.div(r||(r=(0,B.A)(["\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),H=T.Ay.div(o||(o=(0,B.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n"]))),J=(0,T.Ay)(I.N_)(i||(i=(0,B.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  font-weight: 500;\n  text-decoration: none;\n  margin-right: 1rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.primary),O=T.Ay.div(s||(s=(0,B.A)(["\n  margin-bottom: 2rem;\n"]))),V=T.Ay.h1(a||(a=(0,B.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  color: ",";\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1.5rem;\n  }\n"])),e=>e.theme.colors.text),K=T.Ay.p(l||(l=(0,B.A)(["\n  font-size: 1rem;\n  color: ",";\n  max-width: 800px;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.textLight),R=T.Ay.div(d||(d=(0,B.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  max-width: 800px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n    gap: 0.5rem;\n  }\n"]))),U=T.Ay.button(c||(c=(0,B.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: 480px) {\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    \n    svg {\n      margin-right: 0.25rem;\n    }\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.text,e=>e.theme.colors.border,e=>e.theme.colors.hover),Y=((0,T.Ay)(U)(h||(h=(0,B.A)(["\n  margin-bottom: 1rem;\n"]))),T.Ay.div(m||(m=(0,B.A)(["\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 800px;\n  height: 500px;\n  overflow: auto;\n  margin-bottom: 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  background-color: ",";\n  \n  @media (max-width: 768px) {\n    height: 400px;\n  }\n  \n  @media (max-width: 480px) {\n    height: 350px;\n  }\n"])),e=>e.theme.colors.border,e=>e.theme.colors.card)),q=T.Ay.svg(g||(g=(0,B.A)(["\n  width: 100%;\n  height: 100%;\n"]))),Q=(0,T.i7)(u||(u=(0,B.A)(["\n  0% {\n    stroke-width: 2;\n    opacity: 0.9;\n  }\n  50% {\n    stroke-width: 4;\n    opacity: 1;\n  }\n  100% {\n    stroke-width: 2;\n    opacity: 0.9;\n  }\n"]))),W=T.Ay.path(x||(x=(0,B.A)(["\n  stroke: ",";\n  stroke-width: ",";\n  stroke-linecap: round;\n  transition: stroke 0.3s ease, stroke-width 0.3s ease;\n  \n  ","\n"])),e=>e.mstEdge?"#4CAF50":e.current?"#E91E63":e.included?"#64B5F6":"#888",e=>e.mstEdge||e.current?3:2,e=>e.current&&(0,T.AH)(p||(p=(0,B.A)(["\n    animation: "," 1s infinite;\n  "])),Q)),X=T.Ay.circle(f||(f=(0,B.A)(["\n  fill: ",";\n  stroke: #555;\n  stroke-width: 2;\n  cursor: pointer;\n  transition: fill 0.3s ease;\n  \n  ","\n"])),e=>e.current?"#E91E63":e.inMst?"#4CAF50":e=>e.theme.colors.card,e=>e.current&&(0,T.AH)(v||(v=(0,B.A)(["\n    animation: "," 1s infinite;\n  "])),Q)),Z=T.Ay.text(A||(A=(0,B.A)(["\n  fill: ",";\n  text-anchor: middle;\n  dominant-baseline: central;\n  font-size: 12px;\n  user-select: none;\n"])),e=>e.theme.colors.text),$=T.Ay.text(y||(y=(0,B.A)(["\n  fill: ",";\n  text-anchor: middle;\n  dominant-baseline: central;\n  font-size: 12px;\n  font-weight: bold;\n  user-select: none;\n  background-color: ",";\n  paint-order: stroke;\n  stroke: ",";\n  stroke-width: 3px;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n"])),e=>e.theme.colors.text,e=>e.theme.colors.card,e=>e.theme.colors.card),ee=T.Ay.div(j||(j=(0,B.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  margin-bottom: 2rem;\n  max-width: 800px;\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),ne=T.Ay.h3(w||(w=(0,B.A)(["\n  margin-bottom: 0.5rem;\n  color: ",";\n  font-size: 1.2rem;\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n  }\n"])),e=>e.theme.colors.text),te=T.Ay.p(b||(b=(0,B.A)(["\n  color: ",";\n  margin-bottom: 0.5rem;\n  line-height: 1.5;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.textLight),re=T.Ay.div(k||(k=(0,B.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 1rem;\n"]))),oe=T.Ay.div(C||(C=(0,B.A)(["\n  display: flex;\n  align-items: center;\n  font-size: 0.9rem;\n  \n  @media (max-width: 480px) {\n    font-size: 0.8rem;\n  }\n"]))),ie=T.Ay.div(E||(E=(0,B.A)(["\n  width: 32px;\n  height: 4px;\n  border-radius: 2px;\n  background-color: ",";\n  margin-right: 0.5rem;\n"])),e=>e.color),se=T.Ay.div(D||(D=(0,B.A)(["\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ",";\n  margin-right: 0.5rem;\n  border: 1px solid #555;\n"])),e=>e.color),ae=T.Ay.div(S||(S=(0,B.A)(["\n  margin-top: 2rem;\n  max-width: 800px;\n  border-radius: 0.5rem;\n  overflow: hidden;\n"]))),le=(0,z.memo)(e=>{let{edge:n,vertices:t}=e;const r=t.find(e=>e.id===n.source),o=t.find(e=>e.id===n.target);if(!r||!o)return null;const i="M ".concat(r.x," ").concat(r.y," L ").concat(o.x," ").concat(o.y),s=(r.x+o.x)/2,a=(r.y+o.y)/2;return(0,P.jsxs)(P.Fragment,{children:[(0,P.jsx)(W,{d:i,included:n.included,current:n.current,mstEdge:n.mstEdge}),(0,P.jsx)($,{x:s,y:a-10,children:n.weight})]})}),de=(0,z.memo)(e=>{let{vertex:n}=e;return(0,P.jsxs)(P.Fragment,{children:[(0,P.jsx)(X,{cx:n.x,cy:n.y,r:20,inMst:n.inMst,current:n.current}),(0,P.jsx)(Z,{x:n.x,y:n.y,children:n.id})]})}),ce=()=>{const[e,n]=(0,z.useState)([]),[t,r]=(0,z.useState)([]),[o,i]=(0,z.useState)(!1),[s,a]=(0,z.useState)(0),[l,d]=(0,z.useState)([]),[c,h]=(0,z.useState)(""),[m,g]=(0,z.useState)(!1);(0,z.useEffect)(()=>{u()},[]);const u=()=>{i(!1),a(0),h("");const e=400,t=250,o=[];for(let n=0;n<7;n++){const r=2*n*Math.PI/7;o.push({id:n,x:e+200*Math.cos(r),y:t+200*Math.sin(r),inMst:!1,current:!1})}const s=[];let l=0;for(let n=1;n<7;n++)s.push({id:l++,source:Math.floor(Math.random()*n),target:n,weight:Math.floor(20*Math.random())+1,included:!1,current:!1,mstEdge:!1});const c=Math.floor(7*.8);for(let n=0;n<c;n++){const e=Math.floor(7*Math.random());let n=Math.floor(7*Math.random());for(;e===n||s.some(t=>t.source===e&&t.target===n||t.source===n&&t.target===e);)n=Math.floor(7*Math.random());s.push({id:l++,source:e,target:n,weight:Math.floor(20*Math.random())+1,included:!1,current:!1,mstEdge:!1})}n(o),r(s),d([])},x=()=>{i(!1),a(0),h("");const o=e.map(e=>(0,M.A)((0,M.A)({},e),{},{inMst:!1,current:!1})),s=t.map(e=>(0,M.A)((0,M.A)({},e),{},{included:!1,current:!1,mstEdge:!1}));n(o),r(s)},p=(0,z.useCallback)(()=>{const n=(()=>{x();const n=[],r=e.length,o=e.map(e=>(0,M.A)((0,M.A)({},e),{},{inMst:!1,current:!1})),i=t.map(e=>(0,M.A)((0,M.A)({},e),{},{included:!1,current:!1,mstEdge:!1}));n.push({vertices:o,edges:i,info:"Starting Prim's Algorithm: Select any vertex to start"});const s=new Set([0]),a=o.map(e=>(0,M.A)((0,M.A)({},e),{},{inMst:0===e.id,current:0===e.id}));for(n.push({vertices:a,edges:i,info:"Selected vertex ".concat(0," as the starting vertex")});s.size<r;){let e=null,t=1/0;const r=[];for(const n of i){const o=s.has(n.source),i=s.has(n.target);(o&&!i||!o&&i)&&(r.push(n),n.weight<t&&(t=n.weight,e=n))}const o=n[n.length-1].edges.map(e=>(0,M.A)((0,M.A)({},e),{},{included:r.some(n=>n.id===e.id),current:!1,mstEdge:e.mstEdge}));if(n.push({vertices:n[n.length-1].vertices,edges:o,info:"Identified ".concat(r.length," candidate edges that connect to non-MST vertices")}),!e)break;{const t=o.map(n=>{var t;return(0,M.A)((0,M.A)({},n),{},{current:n.id===(null===(t=e)||void 0===t?void 0:t.id)})});n.push({vertices:n[n.length-1].vertices,edges:t,info:"Selected edge (".concat(e.source,"-").concat(e.target,") with minimum weight ").concat(e.weight)});const r=s.has(e.source)?e.target:e.source;s.add(r);const i=n[n.length-1].vertices.map(e=>(0,M.A)((0,M.A)({},e),{},{inMst:s.has(e.id),current:e.id===r})),a=t.map(n=>{var t;return(0,M.A)((0,M.A)({},n),{},{mstEdge:n.id===(null===(t=e)||void 0===t?void 0:t.id)||n.mstEdge,current:!1})});n.push({vertices:i,edges:a,info:"Added vertex ".concat(r," and edge (").concat(e.source,"-").concat(e.target,") to MST")})}}const l=n[n.length-1].vertices.map(e=>(0,M.A)((0,M.A)({},e),{},{current:!1}));return n.push({vertices:l,edges:n[n.length-1].edges,info:"MST complete! All vertices connected with minimum total weight."}),d(n),n})();d(n),i(!0),a(0)},[e,t]),f=(0,z.useCallback)(()=>{if(s<l.length-1){const e=s+1;a(e),n(l[e].vertices),r(l[e].edges),h(l[e].info)}},[s,l]);(0,z.useEffect)(()=>{let e;return o&&s<l.length-1?e=setTimeout(()=>{f()},1e3):s>=l.length-1&&i(!1),()=>{e&&clearTimeout(e)}},[o,s,l,f]);return(0,P.jsxs)(_,{children:[(0,P.jsx)(H,{children:(0,P.jsxs)(J,{to:"/algorithms/graph",children:[(0,P.jsx)(F.QVr,{})," Back to Graph Algorithms"]})}),(0,P.jsxs)(O,{children:[(0,P.jsx)(V,{children:"Prim's Algorithm"}),(0,P.jsx)(K,{children:"Prim's algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. It finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edges in the tree is minimized."})]}),(0,P.jsxs)(ee,{children:[(0,P.jsx)(ne,{children:"How to use this visualization:"}),(0,P.jsx)(te,{children:"1. The graph shows vertices and weighted edges"}),(0,P.jsx)(te,{children:"2. Use the controls to start, pause, or reset the visualization"}),(0,P.jsx)(te,{children:"3. You can generate a new random graph to see how the algorithm works with different inputs"}),(0,P.jsx)(te,{children:"4. You can also provide your own custom graph data"}),(0,P.jsxs)(re,{children:[(0,P.jsxs)(oe,{children:[(0,P.jsx)(se,{color:"#4CAF50"})," MST Vertex"]}),(0,P.jsxs)(oe,{children:[(0,P.jsx)(se,{color:"#E91E63"})," Current Vertex"]}),(0,P.jsxs)(oe,{children:[(0,P.jsx)(ie,{color:"#4CAF50"})," MST Edge"]}),(0,P.jsxs)(oe,{children:[(0,P.jsx)(ie,{color:"#E91E63"})," Current Edge"]}),(0,P.jsxs)(oe,{children:[(0,P.jsx)(ie,{color:"#64B5F6"})," Candidate Edge"]}),(0,P.jsxs)(oe,{children:[(0,P.jsx)(ie,{color:"#888"})," Unprocessed Edge"]})]})]}),(0,P.jsxs)(R,{children:[(0,P.jsxs)(U,{onClick:u,children:[(0,P.jsx)(F.dhv,{})," New Graph"]}),(0,P.jsx)(U,{onClick:()=>g(!m),children:m?"Hide Custom Input":"Custom Graph"}),(0,P.jsxs)(U,{onClick:p,disabled:o,children:[(0,P.jsx)(F.gSK,{})," Start"]}),(0,P.jsxs)(U,{onClick:()=>i(!1),disabled:!o,children:[(0,P.jsx)(F.kwt,{})," Pause"]}),(0,P.jsxs)(U,{onClick:x,children:[(0,P.jsx)(F.EEI,{})," Reset"]}),(0,P.jsxs)(U,{onClick:f,disabled:o||s>=l.length-1,children:[(0,P.jsx)(F.FH8,{})," Step"]})]}),m&&(0,P.jsxs)(ee,{children:[(0,P.jsx)(ne,{children:"Custom Graph Input"}),(0,P.jsx)(L.A,{onApply:(e,t)=>{o&&(i(!1),l.length>0&&(a(0),h("")));const s=e.map(e=>(0,M.A)((0,M.A)({},e),{},{inMst:!1,current:!1})),d=t.map((e,n)=>({id:n,source:e.source,target:e.target,weight:e.weight,included:!1,current:!1,mstEdge:!1}));n(s),r(d),g(!1)}})]}),c&&(0,P.jsxs)(ee,{children:[(0,P.jsx)(ne,{children:"Current Step:"}),(0,P.jsx)(te,{children:c})]}),(0,P.jsx)(Y,{children:(0,P.jsxs)(q,{viewBox:"0 0 800 500",preserveAspectRatio:"xMidYMid meet",children:[t.map(n=>(0,P.jsx)(le,{edge:n,vertices:e},n.id)),e.map(e=>(0,P.jsx)(de,{vertex:e},e.id))]})}),(0,P.jsxs)(ee,{children:[(0,P.jsx)(ne,{children:"Implementation Code:"}),(0,P.jsx)(ae,{children:(0,P.jsx)(z.Suspense,{fallback:(0,P.jsx)("div",{children:"Loading code..."}),children:(0,P.jsx)(G,{language:"javascript",style:N.A,children:"function primMST(vertices, edges) {\n  const n = vertices.length;\n  \n  // Track vertices in MST\n  const inMST = new Array(n).fill(false);\n  \n  // Track minimum edge weights\n  const key = new Array(n).fill(Infinity);\n  \n  // Track parent of each vertex in MST\n  const parent = new Array(n).fill(-1);\n  \n  // Start with vertex 0\n  key[0] = 0;\n  \n  // Create adjacency list\n  const adjList = Array(n).fill(null).map(() => []);\n  for (const edge of edges) {\n    const { source, target, weight } = edge;\n    adjList[source].push({ vertex: target, weight });\n    adjList[target].push({ vertex: source, weight });\n  }\n  \n  // Find MST with n vertices\n  const mstEdges = [];\n  \n  for (let count = 0; count < n; count++) {\n    // Find vertex with minimum key value\n    let u = -1;\n    let minKey = Infinity;\n    \n    for (let v = 0; v < n; v++) {\n      if (!inMST[v] && key[v] < minKey) {\n        minKey = key[v];\n        u = v;\n      }\n    }\n    \n    // Add vertex to MST\n    inMST[u] = true;\n    \n    // Add edge to MST (except for the first vertex)\n    if (parent[u] !== -1) {\n      const edgeToAdd = edges.find(e => \n        (e.source === u && e.target === parent[u]) || \n        (e.source === parent[u] && e.target === u)\n      );\n      if (edgeToAdd) {\n        mstEdges.push(edgeToAdd);\n      }\n    }\n    \n    // Update key values of adjacent vertices\n    for (const neighbor of adjList[u]) {\n      const v = neighbor.vertex;\n      const weight = neighbor.weight;\n      \n      if (!inMST[v] && weight < key[v]) {\n        parent[v] = u;\n        key[v] = weight;\n      }\n    }\n  }\n  \n  return mstEdges;\n}"})})})]})]})}},58916:(e,n,t)=>{t.d(n,{A:()=>k});var r,o,i,s,a,l,d,c,h=t(57528),m=t(9950),g=t(44752),u=t(44414);const x=g.Ay.div(r||(r=(0,h.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-width: 800px;\n"]))),p=g.Ay.div(o||(o=(0,h.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n"]))),f=g.Ay.label(i||(i=(0,h.A)(["\n  font-size: 0.9rem;\n  color: ",";\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),v=g.Ay.textarea(s||(s=(0,h.A)(["\n  width: 100%;\n  min-height: 100px;\n  padding: 0.75rem;\n  font-family: monospace;\n  border: 1px solid ",";\n  border-radius: ",";\n  resize: vertical;\n"])),e=>{let{theme:n}=e;return n.colors.border},e=>{let{theme:n}=e;return n.borderRadius}),A=g.Ay.div(a||(a=(0,h.A)(["\n  display: flex;\n  gap: 1rem;\n  margin-top: 0.5rem;\n"]))),y=g.Ay.button(l||(l=(0,h.A)(["\n  padding: 0.5rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: none;\n  border-radius: ",";\n  border: 1px solid ",";\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n"])),e=>e.theme.colors.primary,e=>{let{theme:n}=e;return n.colors.card},e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.colors.primaryDark),j=g.Ay.div(d||(d=(0,h.A)(["\n  color: ",";\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n"])),e=>e.theme.colors.danger),w=g.Ay.div(c||(c=(0,h.A)(["\n  font-size: 0.85rem;\n  color: ",";\n  margin-top: 0.5rem;\n  line-height: 1.4;\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),b={vertices:[{id:0,x:200,y:100},{id:1,x:400,y:100},{id:2,x:600,y:100},{id:3,x:300,y:300},{id:4,x:500,y:300}],edges:[{source:0,target:1,weight:5},{source:1,target:2,weight:8},{source:0,target:3,weight:9},{source:1,target:3,weight:2},{source:1,target:4,weight:7},{source:2,target:4,weight:3},{source:3,target:4,weight:4}]},k=e=>{let{onApply:n,maxVertices:t=20}=e;const[r,o]=(0,m.useState)(""),[i,s]=(0,m.useState)(null);return(0,u.jsxs)(x,{children:[(0,u.jsxs)(p,{children:[(0,u.jsx)(f,{children:"Enter custom graph (JSON format):"}),(0,u.jsx)(v,{value:r,onChange:e=>{o(e.target.value),s(null)},placeholder:'{"vertices": [...], "edges": [...]}'}),(0,u.jsx)(w,{children:'Format: A JSON object with "vertices" and "edges" arrays. Each vertex needs id, x, and y coordinates. Each edge needs source, target (vertex ids), and weight. See the example for details.'}),i&&(0,u.jsx)(j,{children:i})]}),(0,u.jsxs)(A,{children:[(0,u.jsx)(y,{onClick:()=>{o(JSON.stringify(b,null,2)),s(null)},children:"Load Example"}),(0,u.jsx)(y,{onClick:()=>{try{if(!r.trim())return void s("Please enter graph data");const e=JSON.parse(r);if(!e.vertices||!Array.isArray(e.vertices))return void s('Invalid format: "vertices" must be an array');if(0===e.vertices.length)return void s("Graph must have at least one vertex");if(e.vertices.length>t)return void s("Too many vertices. Maximum allowed is ".concat(t));for(const n of e.vertices){if(!("id"in n&&"x"in n&&"y"in n))return void s("Each vertex must have id, x, and y properties");if("number"!==typeof n.id||"number"!==typeof n.x||"number"!==typeof n.y)return void s("Vertex id, x, and y must be numbers")}if(!e.edges||!Array.isArray(e.edges))return void s('Invalid format: "edges" must be an array');const o=new Set(e.vertices.map(e=>e.id));for(const n of e.edges){if(!("source"in n&&"target"in n&&"weight"in n))return void s("Each edge must have source, target, and weight properties");if("number"!==typeof n.source||"number"!==typeof n.target||"number"!==typeof n.weight)return void s("Edge source, target, and weight must be numbers");if(!o.has(n.source)||!o.has(n.target))return void s("Edge references a vertex id that doesn't exist")}n(e.vertices,e.edges),s(null)}catch(e){s("Invalid JSON: ".concat(e instanceof Error?e.message:String(e)))}},children:"Apply Custom Graph"})]})]})}},85283:(e,n,t)=>{t.d(n,{A:()=>r});const r={hljs:{display:"block",overflowX:"auto",padding:"0.5em",background:"#1E1E1E",color:"#DCDCDC"},"hljs-keyword":{color:"#569CD6"},"hljs-literal":{color:"#569CD6"},"hljs-symbol":{color:"#569CD6"},"hljs-name":{color:"#569CD6"},"hljs-link":{color:"#569CD6",textDecoration:"underline"},"hljs-built_in":{color:"#4EC9B0"},"hljs-type":{color:"#4EC9B0"},"hljs-number":{color:"#B8D7A3"},"hljs-class":{color:"#B8D7A3"},"hljs-string":{color:"#D69D85"},"hljs-meta-string":{color:"#D69D85"},"hljs-regexp":{color:"#9A5334"},"hljs-template-tag":{color:"#9A5334"},"hljs-subst":{color:"#DCDCDC"},"hljs-function":{color:"#DCDCDC"},"hljs-title":{color:"#DCDCDC"},"hljs-params":{color:"#DCDCDC"},"hljs-formula":{color:"#DCDCDC"},"hljs-comment":{color:"#57A64A",fontStyle:"italic"},"hljs-quote":{color:"#57A64A",fontStyle:"italic"},"hljs-doctag":{color:"#608B4E"},"hljs-meta":{color:"#9B9B9B"},"hljs-meta-keyword":{color:"#9B9B9B"},"hljs-tag":{color:"#9B9B9B"},"hljs-variable":{color:"#BD63C5"},"hljs-template-variable":{color:"#BD63C5"},"hljs-attr":{color:"#9CDCFE"},"hljs-attribute":{color:"#9CDCFE"},"hljs-builtin-name":{color:"#9CDCFE"},"hljs-section":{color:"gold"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"},"hljs-bullet":{color:"#D7BA7D"},"hljs-selector-tag":{color:"#D7BA7D"},"hljs-selector-id":{color:"#D7BA7D"},"hljs-selector-class":{color:"#D7BA7D"},"hljs-selector-attr":{color:"#D7BA7D"},"hljs-selector-pseudo":{color:"#D7BA7D"},"hljs-addition":{backgroundColor:"#144212",display:"inline-block",width:"100%"},"hljs-deletion":{backgroundColor:"#600",display:"inline-block",width:"100%"}}}}]);