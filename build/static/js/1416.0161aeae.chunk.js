"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[1416],{51416:(e,n,t)=>{t.r(n),t.d(n,{default:()=>ae});var r,o,s,i,a,d,l,c,h,m,g,u,x,p,f,y,j,A,w,b,v,k,C,D,E=t(89379),S=t(57528),M=t(9950),B=t(44752),z=t(54826),F=t(42074),I=t(58916),R=t(85283),T=t(44414);const Y=(0,M.lazy)(()=>Promise.all([t.e(2793),t.e(4412),t.e(8925),t.e(7874)]).then(t.bind(t,67874))),X=B.Ay.div(r||(r=(0,S.A)(["\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),N=B.Ay.div(o||(o=(0,S.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n"]))),L=(0,B.Ay)(F.N_)(s||(s=(0,S.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  font-weight: 500;\n  text-decoration: none;\n  margin-right: 1rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.primary),_=B.Ay.div(i||(i=(0,S.A)(["\n  margin-bottom: 2rem;\n"]))),G=B.Ay.h1(a||(a=(0,S.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  color: ",";\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1.5rem;\n  }\n"])),e=>e.theme.colors.text),J=B.Ay.p(d||(d=(0,S.A)(["\n  font-size: 1rem;\n  color: ",";\n  max-width: 800px;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.textLight),O=B.Ay.div(l||(l=(0,S.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  max-width: 800px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n    gap: 0.5rem;\n  }\n"]))),P=B.Ay.button(c||(c=(0,S.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: 480px) {\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    \n    svg {\n      margin-right: 0.25rem;\n    }\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.text,e=>e.theme.colors.border,e=>e.theme.colors.hover),H=((0,B.Ay)(P)(h||(h=(0,S.A)(["\n  margin-bottom: 1rem;\n"]))),B.Ay.div(m||(m=(0,S.A)(["\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 800px;\n  height: 500px;\n  overflow: auto;\n  margin-bottom: 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  background-color: ",";\n  \n  @media (max-width: 768px) {\n    height: 400px;\n  }\n  \n  @media (max-width: 480px) {\n    height: 350px;\n  }\n"])),e=>e.theme.colors.border,e=>e.theme.colors.card)),K=B.Ay.svg(g||(g=(0,S.A)(["\n  width: 100%;\n  height: 100%;\n"]))),U=(0,B.i7)(u||(u=(0,S.A)(["\n  0% {\n    stroke-width: 2;\n    opacity: 0.9;\n  }\n  50% {\n    stroke-width: 4;\n    opacity: 1;\n  }\n  100% {\n    stroke-width: 2;\n    opacity: 0.9;\n  }\n"]))),V=B.Ay.path(x||(x=(0,S.A)(["\n  stroke: ",";\n  stroke-width: ",";\n  stroke-linecap: round;\n  transition: stroke 0.3s ease, stroke-width 0.3s ease;\n  \n  ","\n"])),e=>e.mstEdge?"#4CAF50":e.current?"#E91E63":e.included?"#64B5F6":"#888",e=>e.mstEdge||e.current?3:2,e=>e.current&&(0,B.AH)(p||(p=(0,S.A)(["\n    animation: "," 1s infinite;\n  "])),U)),W=B.Ay.circle(f||(f=(0,S.A)(["\n  fill: ",";\n  stroke: #555;\n  stroke-width: 2;\n  cursor: pointer;\n"])),e=>e.theme.colors.card),q=B.Ay.text(y||(y=(0,S.A)(["\n  fill: ",";\n  text-anchor: middle;\n  dominant-baseline: central;\n  font-size: 12px;\n  user-select: none;\n"])),e=>e.theme.colors.text),Q=B.Ay.text(j||(j=(0,S.A)(["\n  fill: ",";\n  text-anchor: middle;\n  dominant-baseline: central;\n  font-size: 12px;\n  font-weight: bold;\n  user-select: none;\n  background-color: ",";\n  paint-order: stroke;\n  stroke: ",";\n  stroke-width: 3px;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n"])),e=>e.theme.colors.text,e=>e.theme.colors.card,e=>e.theme.colors.card),Z=B.Ay.div(A||(A=(0,S.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  margin-bottom: 2rem;\n  max-width: 800px;\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),$=B.Ay.h3(w||(w=(0,S.A)(["\n  margin-bottom: 0.5rem;\n  color: ",";\n  font-size: 1.2rem;\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n  }\n"])),e=>e.theme.colors.text),ee=B.Ay.p(b||(b=(0,S.A)(["\n  color: ",";\n  margin-bottom: 0.5rem;\n  line-height: 1.5;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.textLight),ne=B.Ay.div(v||(v=(0,S.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 1rem;\n"]))),te=B.Ay.div(k||(k=(0,S.A)(["\n  display: flex;\n  align-items: center;\n  font-size: 0.9rem;\n  \n  @media (max-width: 480px) {\n    font-size: 0.8rem;\n  }\n"]))),re=B.Ay.div(C||(C=(0,S.A)(["\n  width: 32px;\n  height: 4px;\n  border-radius: 2px;\n  background-color: ",";\n  margin-right: 0.5rem;\n"])),e=>e.color),oe=B.Ay.div(D||(D=(0,S.A)(["\n  margin-top: 2rem;\n  max-width: 800px;\n  border-radius: 0.5rem;\n  overflow: hidden;\n"]))),se=(0,M.memo)(e=>{let{edge:n,vertices:t}=e;const r=t.find(e=>e.id===n.source),o=t.find(e=>e.id===n.target);if(!r||!o)return null;const s="M ".concat(r.x," ").concat(r.y," L ").concat(o.x," ").concat(o.y),i=(r.x+o.x)/2,a=(r.y+o.y)/2;return(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(V,{d:s,included:n.included,current:n.current,mstEdge:n.mstEdge}),(0,T.jsx)(Q,{x:i,y:a-10,children:n.weight})]})}),ie=(0,M.memo)(e=>{let{vertex:n}=e;return(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(W,{cx:n.x,cy:n.y,r:20}),(0,T.jsx)(q,{x:n.x,y:n.y,children:n.id})]})}),ae=()=>{const[e,n]=(0,M.useState)([]),[t,r]=(0,M.useState)([]),[o,s]=(0,M.useState)(!1),[i,a]=(0,M.useState)(0),[d,l]=(0,M.useState)([]),[c,h]=(0,M.useState)(""),[m,g]=(0,M.useState)(!1);(0,M.useEffect)(()=>{u()},[]);const u=()=>{s(!1),a(0),h("");const e=400,t=250,o=[];for(let n=0;n<7;n++){const r=2*n*Math.PI/7;o.push({id:n,x:e+200*Math.cos(r),y:t+200*Math.sin(r)})}const i=[];let d=0;for(let n=1;n<7;n++)i.push({id:d++,source:Math.floor(Math.random()*n),target:n,weight:Math.floor(20*Math.random())+1,included:!1,current:!1,mstEdge:!1});const c=Math.floor(7*.8);for(let n=0;n<c;n++){const e=Math.floor(7*Math.random());let n=Math.floor(7*Math.random());for(;e===n||i.some(t=>t.source===e&&t.target===n||t.source===n&&t.target===e);)n=Math.floor(7*Math.random());i.push({id:d++,source:e,target:n,weight:Math.floor(20*Math.random())+1,included:!1,current:!1,mstEdge:!1})}n(o),r(i),l([])},x=(e,n)=>(e.parent[n]!==n&&(e.parent[n]=x(e,e.parent[n])),e.parent[n]),p=(e,n,t)=>{const r=x(e,n),o=x(e,t);r!==o&&(e.rank[r]<e.rank[o]?e.parent[r]=o:e.rank[r]>e.rank[o]?e.parent[o]=r:(e.parent[o]=r,e.rank[r]++))},f=()=>{y();const n=[],r=e.length,o=[...t].sort((e,n)=>e.weight-n.weight),s=o.map(e=>(0,E.A)((0,E.A)({},e),{},{included:!1,current:!1,mstEdge:!1}));n.push({edges:s,info:"Starting Kruskal's Algorithm: Edges sorted by weight"});const i=(a=r,{parent:Array(a).fill(0).map((e,n)=>n),rank:Array(a).fill(0)});var a;let d=0;for(let e=0;e<o.length;e++){const t=o[e],s=n[n.length-1].edges.map(e=>(0,E.A)((0,E.A)({},e),{},{current:e.id===t.id}));n.push({edges:s,info:"Considering edge (".concat(t.source,"-").concat(t.target,") with weight ").concat(t.weight)});const a=x(i,t.source),l=x(i,t.target);if(a!==l){p(i,a,l);const e=s.map(e=>(0,E.A)((0,E.A)({},e),{},{mstEdge:e.id===t.id||e.mstEdge,current:!1}));if(n.push({edges:e,info:"Edge (".concat(t.source,"-").concat(t.target,") added to MST: No cycle formed")}),d++,d===r-1){n.push({edges:e,info:"MST complete! All vertices connected with minimum weight."});break}}else{const e=s.map(e=>(0,E.A)((0,E.A)({},e),{},{included:e.id===t.id||e.included,current:!1}));n.push({edges:e,info:"Edge (".concat(t.source,"-").concat(t.target,") rejected: Would create a cycle")})}}return l(n),n},y=()=>{s(!1),a(0),h("");const e=t.map(e=>(0,E.A)((0,E.A)({},e),{},{included:!1,current:!1,mstEdge:!1}));r(e)},j=(0,M.useCallback)(()=>{const e=f();l(e),s(!0),a(0)},[e,t]),A=(0,M.useCallback)(()=>{if(i<d.length-1){const e=i+1;a(e),r(d[e].edges),h(d[e].info)}},[i,d]);(0,M.useEffect)(()=>{let e;return o&&i<d.length-1?e=setTimeout(()=>{A()},1e3):i>=d.length-1&&s(!1),()=>{e&&clearTimeout(e)}},[o,i,d,A]);return(0,T.jsxs)(X,{children:[(0,T.jsx)(N,{children:(0,T.jsxs)(L,{to:"/algorithms/graph",children:[(0,T.jsx)(z.QVr,{})," Back to Graph Algorithms"]})}),(0,T.jsxs)(_,{children:[(0,T.jsx)(G,{children:"Kruskal's Algorithm"}),(0,T.jsx)(J,{children:"Kruskal's algorithm is a minimum spanning tree algorithm that finds an edge of the least possible weight that connects any two trees in the forest. It is a greedy algorithm that builds the spanning tree by adding edges one by one into a growing spanning tree."})]}),(0,T.jsxs)(Z,{children:[(0,T.jsx)($,{children:"How to use this visualization:"}),(0,T.jsx)(ee,{children:"1. The graph shows vertices and weighted edges"}),(0,T.jsx)(ee,{children:"2. Use the controls to start, pause, or reset the visualization"}),(0,T.jsx)(ee,{children:"3. You can generate a new random graph to see how the algorithm works with different inputs"}),(0,T.jsx)(ee,{children:"4. You can also provide your own custom graph data"}),(0,T.jsxs)(ne,{children:[(0,T.jsxs)(te,{children:[(0,T.jsx)(re,{color:"#4CAF50"})," MST Edge"]}),(0,T.jsxs)(te,{children:[(0,T.jsx)(re,{color:"#E91E63"})," Current Edge"]}),(0,T.jsxs)(te,{children:[(0,T.jsx)(re,{color:"#64B5F6"})," Rejected Edge"]}),(0,T.jsxs)(te,{children:[(0,T.jsx)(re,{color:"#888"})," Unprocessed Edge"]})]})]}),(0,T.jsxs)(O,{children:[(0,T.jsxs)(P,{onClick:u,children:[(0,T.jsx)(z.dhv,{})," New Graph"]}),(0,T.jsx)(P,{onClick:()=>g(!m),children:m?"Hide Custom Input":"Custom Graph"}),(0,T.jsxs)(P,{onClick:j,disabled:o,children:[(0,T.jsx)(z.gSK,{})," Start"]}),(0,T.jsxs)(P,{onClick:()=>s(!1),disabled:!o,children:[(0,T.jsx)(z.kwt,{})," Pause"]}),(0,T.jsxs)(P,{onClick:y,children:[(0,T.jsx)(z.EEI,{})," Reset"]}),(0,T.jsxs)(P,{onClick:A,disabled:o||i>=d.length-1,children:[(0,T.jsx)(z.FH8,{})," Step"]})]}),m&&(0,T.jsxs)(Z,{children:[(0,T.jsx)($,{children:"Custom Graph Input"}),(0,T.jsx)(I.A,{onApply:(e,t)=>{o&&(s(!1),d.length>0&&(a(0),h("")));const i=e.map(e=>(0,E.A)((0,E.A)({},e),{},{inMst:!1,current:!1})),l=t.map((e,n)=>({id:n,source:e.source,target:e.target,weight:e.weight,included:!1,current:!1,mstEdge:!1}));n(i),r(l),g(!1)}})]}),c&&(0,T.jsxs)(Z,{children:[(0,T.jsx)($,{children:"Current Step:"}),(0,T.jsx)(ee,{children:c})]}),(0,T.jsx)(H,{children:(0,T.jsxs)(K,{viewBox:"0 0 800 500",preserveAspectRatio:"xMidYMid meet",children:[t.map(n=>(0,T.jsx)(se,{edge:n,vertices:e},n.id)),e.map(e=>(0,T.jsx)(ie,{vertex:e},e.id))]})}),(0,T.jsxs)(Z,{children:[(0,T.jsx)($,{children:"Implementation Code:"}),(0,T.jsx)(oe,{children:(0,T.jsx)(M.Suspense,{fallback:(0,T.jsx)("div",{children:"Loading code..."}),children:(0,T.jsx)(Y,{language:"javascript",style:R.A,children:"function kruskalMST(vertices, edges) {\n  // Sort edges by weight\n  const sortedEdges = [...edges].sort((a, b) => a.weight - b.weight);\n  \n  // Make a disjoint set for vertices\n  const ds = makeDisjointSet(vertices.length);\n  \n  // To store the MST edges\n  const mstEdges = [];\n  \n  // Process edges in order of increasing weight\n  for (const edge of sortedEdges) {\n    // Find sets of source and target vertices\n    const sourceRoot = find(ds, edge.source);\n    const targetRoot = find(ds, edge.target);\n    \n    // Check if adding this edge creates a cycle\n    if (sourceRoot !== targetRoot) {\n      // Include this edge in MST\n      union(ds, sourceRoot, targetRoot);\n      mstEdges.push(edge);\n      \n      // If we've added n-1 edges, we're done\n      if (mstEdges.length === vertices.length - 1) {\n        break;\n      }\n    }\n  }\n  \n  return mstEdges;\n}\n\n// Disjoint set data structure\nfunction makeDisjointSet(n) {\n  const parent = Array(n).fill(0).map((_, i) => i);\n  const rank = Array(n).fill(0);\n  return { parent, rank };\n}\n\n// Find with path compression\nfunction find(ds, x) {\n  if (ds.parent[x] !== x) {\n    ds.parent[x] = find(ds, ds.parent[x]);\n  }\n  return ds.parent[x];\n}\n\n// Union by rank\nfunction union(ds, x, y) {\n  const rootX = find(ds, x);\n  const rootY = find(ds, y);\n  \n  if (rootX === rootY) return;\n  \n  if (ds.rank[rootX] < ds.rank[rootY]) {\n    ds.parent[rootX] = rootY;\n  } else if (ds.rank[rootX] > ds.rank[rootY]) {\n    ds.parent[rootY] = rootX;\n  } else {\n    ds.parent[rootY] = rootX;\n    ds.rank[rootX]++;\n  }\n}"})})})]})]})}},58916:(e,n,t)=>{t.d(n,{A:()=>k});var r,o,s,i,a,d,l,c,h=t(57528),m=t(9950),g=t(44752),u=t(44414);const x=g.Ay.div(r||(r=(0,h.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  max-width: 800px;\n"]))),p=g.Ay.div(o||(o=(0,h.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n"]))),f=g.Ay.label(s||(s=(0,h.A)(["\n  font-size: 0.9rem;\n  color: ",";\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),y=g.Ay.textarea(i||(i=(0,h.A)(["\n  width: 100%;\n  min-height: 100px;\n  padding: 0.75rem;\n  font-family: monospace;\n  border: 1px solid ",";\n  border-radius: ",";\n  resize: vertical;\n"])),e=>{let{theme:n}=e;return n.colors.border},e=>{let{theme:n}=e;return n.borderRadius}),j=g.Ay.div(a||(a=(0,h.A)(["\n  display: flex;\n  gap: 1rem;\n  margin-top: 0.5rem;\n"]))),A=g.Ay.button(d||(d=(0,h.A)(["\n  padding: 0.5rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: none;\n  border-radius: ",";\n  border: 1px solid ",";\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n"])),e=>e.theme.colors.primary,e=>{let{theme:n}=e;return n.colors.card},e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.colors.primaryDark),w=g.Ay.div(l||(l=(0,h.A)(["\n  color: ",";\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n"])),e=>e.theme.colors.danger),b=g.Ay.div(c||(c=(0,h.A)(["\n  font-size: 0.85rem;\n  color: ",";\n  margin-top: 0.5rem;\n  line-height: 1.4;\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),v={vertices:[{id:0,x:200,y:100},{id:1,x:400,y:100},{id:2,x:600,y:100},{id:3,x:300,y:300},{id:4,x:500,y:300}],edges:[{source:0,target:1,weight:5},{source:1,target:2,weight:8},{source:0,target:3,weight:9},{source:1,target:3,weight:2},{source:1,target:4,weight:7},{source:2,target:4,weight:3},{source:3,target:4,weight:4}]},k=e=>{let{onApply:n,maxVertices:t=20}=e;const[r,o]=(0,m.useState)(""),[s,i]=(0,m.useState)(null);return(0,u.jsxs)(x,{children:[(0,u.jsxs)(p,{children:[(0,u.jsx)(f,{children:"Enter custom graph (JSON format):"}),(0,u.jsx)(y,{value:r,onChange:e=>{o(e.target.value),i(null)},placeholder:'{"vertices": [...], "edges": [...]}'}),(0,u.jsx)(b,{children:'Format: A JSON object with "vertices" and "edges" arrays. Each vertex needs id, x, and y coordinates. Each edge needs source, target (vertex ids), and weight. See the example for details.'}),s&&(0,u.jsx)(w,{children:s})]}),(0,u.jsxs)(j,{children:[(0,u.jsx)(A,{onClick:()=>{o(JSON.stringify(v,null,2)),i(null)},children:"Load Example"}),(0,u.jsx)(A,{onClick:()=>{try{if(!r.trim())return void i("Please enter graph data");const e=JSON.parse(r);if(!e.vertices||!Array.isArray(e.vertices))return void i('Invalid format: "vertices" must be an array');if(0===e.vertices.length)return void i("Graph must have at least one vertex");if(e.vertices.length>t)return void i("Too many vertices. Maximum allowed is ".concat(t));for(const n of e.vertices){if(!("id"in n&&"x"in n&&"y"in n))return void i("Each vertex must have id, x, and y properties");if("number"!==typeof n.id||"number"!==typeof n.x||"number"!==typeof n.y)return void i("Vertex id, x, and y must be numbers")}if(!e.edges||!Array.isArray(e.edges))return void i('Invalid format: "edges" must be an array');const o=new Set(e.vertices.map(e=>e.id));for(const n of e.edges){if(!("source"in n&&"target"in n&&"weight"in n))return void i("Each edge must have source, target, and weight properties");if("number"!==typeof n.source||"number"!==typeof n.target||"number"!==typeof n.weight)return void i("Edge source, target, and weight must be numbers");if(!o.has(n.source)||!o.has(n.target))return void i("Edge references a vertex id that doesn't exist")}n(e.vertices,e.edges),i(null)}catch(e){i("Invalid JSON: ".concat(e instanceof Error?e.message:String(e)))}},children:"Apply Custom Graph"})]})]})}},85283:(e,n,t)=>{t.d(n,{A:()=>r});const r={hljs:{display:"block",overflowX:"auto",padding:"0.5em",background:"#1E1E1E",color:"#DCDCDC"},"hljs-keyword":{color:"#569CD6"},"hljs-literal":{color:"#569CD6"},"hljs-symbol":{color:"#569CD6"},"hljs-name":{color:"#569CD6"},"hljs-link":{color:"#569CD6",textDecoration:"underline"},"hljs-built_in":{color:"#4EC9B0"},"hljs-type":{color:"#4EC9B0"},"hljs-number":{color:"#B8D7A3"},"hljs-class":{color:"#B8D7A3"},"hljs-string":{color:"#D69D85"},"hljs-meta-string":{color:"#D69D85"},"hljs-regexp":{color:"#9A5334"},"hljs-template-tag":{color:"#9A5334"},"hljs-subst":{color:"#DCDCDC"},"hljs-function":{color:"#DCDCDC"},"hljs-title":{color:"#DCDCDC"},"hljs-params":{color:"#DCDCDC"},"hljs-formula":{color:"#DCDCDC"},"hljs-comment":{color:"#57A64A",fontStyle:"italic"},"hljs-quote":{color:"#57A64A",fontStyle:"italic"},"hljs-doctag":{color:"#608B4E"},"hljs-meta":{color:"#9B9B9B"},"hljs-meta-keyword":{color:"#9B9B9B"},"hljs-tag":{color:"#9B9B9B"},"hljs-variable":{color:"#BD63C5"},"hljs-template-variable":{color:"#BD63C5"},"hljs-attr":{color:"#9CDCFE"},"hljs-attribute":{color:"#9CDCFE"},"hljs-builtin-name":{color:"#9CDCFE"},"hljs-section":{color:"gold"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"},"hljs-bullet":{color:"#D7BA7D"},"hljs-selector-tag":{color:"#D7BA7D"},"hljs-selector-id":{color:"#D7BA7D"},"hljs-selector-class":{color:"#D7BA7D"},"hljs-selector-attr":{color:"#D7BA7D"},"hljs-selector-pseudo":{color:"#D7BA7D"},"hljs-addition":{backgroundColor:"#144212",display:"inline-block",width:"100%"},"hljs-deletion":{backgroundColor:"#600",display:"inline-block",width:"100%"}}}}]);