"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[9982],{39982:(e,t,n)=>{n.r(t),n.d(t,{default:()=>W});var r,i,o,s,a,l,c,d,h,m,g,p,u,f,x,v=n(89379),y=n(57528),b=n(9950),j=n(44752),A=n(42074),w=n(54826),S=n(44414);const P=j.Ay.div(r||(r=(0,y.A)(["\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),k=j.Ay.div(i||(i=(0,y.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n"]))),C=(0,j.Ay)(A.N_)(o||(o=(0,y.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  font-weight: 500;\n  text-decoration: none;\n  margin-right: 1rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n"])),e=>e.theme.colors.primary),M=j.Ay.div(s||(s=(0,y.A)(["\n  margin-bottom: 2rem;\n"]))),E=j.Ay.h1(a||(a=(0,y.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  color: ",";\n"])),e=>e.theme.colors.text),T=j.Ay.p(l||(l=(0,y.A)(["\n  font-size: 1rem;\n  color: ",";\n  max-width: 800px;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n"])),e=>e.theme.colors.textLight),I=j.Ay.div(c||(c=(0,y.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  max-width: 800px;\n"]))),D=j.Ay.button(d||(d=(0,y.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.text,e=>e.theme.colors.border,e=>e.theme.colors.hover),F=j.Ay.div(h||(h=(0,y.A)(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2rem;\n  max-width: 800px;\n"]))),z=j.Ay.div(m||(m=(0,y.A)(["\n  position: relative;\n  width: 600px;\n  height: 400px;\n  background-color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),R=j.Ay.canvas(g||(g=(0,y.A)(["\n  position: absolute;\n  top: 0;\n  left: 0;\n"]))),_=j.Ay.div(p||(p=(0,y.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  margin-bottom: 2rem;\n  max-width: 800px;\n  width: 100%;\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),q=j.Ay.h3(u||(u=(0,y.A)(["\n  margin-bottom: 0.5rem;\n  color: ",";\n  font-size: 1.2rem;\n"])),e=>e.theme.colors.text),B=j.Ay.p(f||(f=(0,y.A)(["\n  color: ",";\n  margin-bottom: 0.5rem;\n  line-height: 1.5;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.textLight),V=j.Ay.select(x||(x=(0,y.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: ",";\n  color: ",";\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:t}=e;return t.colors.border},e=>e.theme.colors.card,e=>e.theme.colors.text),W=()=>{const[e,t]=(0,b.useState)({vertices:[],edges:[]}),[n,r]=(0,b.useState)([]),[i,o]=(0,b.useState)(0),[s,a]=(0,b.useState)(!1),[l,c]=(0,b.useState)(!1),[d,h]=(0,b.useState)(500),m=(0,b.useRef)(null);(0,b.useEffect)(()=>{g()},[]),(0,b.useEffect)(()=>{if(m.current){const e=m.current.getContext("2d");e&&y(e)}},[e,i,n]),(0,b.useEffect)(()=>{let e;return s&&!l&&i<n.length-1?e=setTimeout(()=>{o(e=>e+1)},d):i>=n.length-1&&a(!1),()=>{e&&clearTimeout(e)}},[s,l,i,n,d]);const g=()=>{const e=[],n=[];for(let t=0;t<6;t++){const n=2*Math.PI*t/6;e.push({id:t,x:300+150*Math.cos(n),y:200+150*Math.sin(n),name:String.fromCharCode(65+t)})}for(let t=0;t<e.length;t++){const r=t,i=(t+1)%e.length,o=e[r].x-e[i].x,s=e[r].y-e[i].y,a=Math.round(Math.sqrt(o*o+s*s)/10);n.push({from:r,to:i,weight:a,visited:!1,duplicated:!1})}for(let t=0;t<2;t++){const t=Math.floor(Math.random()*e.length);let r=Math.floor(Math.random()*e.length);for(;t===r||n.some(e=>e.from===t&&e.to===r||e.from===r&&e.to===t);)r=Math.floor(Math.random()*e.length);const i=e[t].x-e[r].x,o=e[t].y-e[r].y,s=Math.round(Math.sqrt(i*i+o*o)/10);n.push({from:t,to:r,weight:s,visited:!1,duplicated:!1})}t({vertices:e,edges:n}),r([]),o(0)},p=e=>e.reduce((e,t)=>e+t.weight,0),u=(e,t)=>{const n=Array(e).fill(0).map(()=>Array(e).fill(1/0)),r=Array(e).fill(0).map(()=>Array(e).fill(-1));for(let i=0;i<e;i++)n[i][i]=0;for(const i of t)n[i.from][i.to]=i.weight,n[i.to][i.from]=i.weight,r[i.from][i.to]=i.to,r[i.to][i.from]=i.from;for(let i=0;i<e;i++)for(let t=0;t<e;t++)for(let o=0;o<e;o++)n[t][i]+n[i][o]<n[t][o]&&(n[t][o]=n[t][i]+n[i][o],r[t][o]=r[t][i]);return{dist:n,next:r}},f=(e,t,n,r)=>{if(-1===n[e][t])return[];const i=[e];let o=e;for(;o!==t;)o=n[o][t],i.push(o);const s=[];for(let a=0;a<i.length-1;a++)s.push({from:i[a],to:i[a+1],weight:r[i[a]][i[a+1]]});return s},x=(e,t)=>{const n=Array(e).fill(0).map(()=>[]);t.forEach((e,t)=>{n[e.from].push({to:e.to,edgeIndex:t}),n[e.to].push({to:e.from,edgeIndex:t})});const r=[],i=[0],o=Array(t.length).fill(!1);for(;i.length>0;){const e=i[i.length-1];let t=!1;for(let r=0;r<n[e].length;r++){const{to:s,edgeIndex:a}=n[e][r];if(!o[a]){o[a]=!0,i.push(s),t=!0;break}}t||r.push(i.pop())}return r.reverse()},y=t=>{const r=t.canvas;t.clearRect(0,0,r.width,r.height),e.edges.forEach((r,o)=>{let s=!1,a=!1;n.length>0&&i<n.length&&o<n[i].edges.length?(s=n[i].edges[o].visited,a=n[i].edges[o].duplicated):o<e.edges.length&&(a=r.duplicated);const l=e.vertices[r.from],c=e.vertices[r.to],d=a?.1*(c.y-l.y):0,h=a?.1*(l.x-c.x):0;if(t.beginPath(),t.strokeStyle=s?"#4caf50":a?"#ff9800":"#aaaaaa",t.lineWidth=2,a){t.moveTo(l.x,l.y);const e=(l.x+c.x)/2+d,n=(l.y+c.y)/2+h;t.quadraticCurveTo(e,n,c.x,c.y)}else t.moveTo(l.x,l.y),t.lineTo(c.x,c.y);t.stroke();const m=(l.x+c.x)/2+d,g=(l.y+c.y)/2+h;t.fillStyle="#ffffff",t.beginPath(),t.arc(m,g,10,0,2*Math.PI),t.fill(),t.fillStyle="#000000",t.font="12px Arial",t.textAlign="center",t.textBaseline="middle",t.fillText(r.weight.toString(),m,g)}),e.vertices.forEach(e=>{const r=n.length>0&&i<n.length&&n[i].currentPath.includes(e.id);t.beginPath(),t.fillStyle=r?"#4caf50":"#2196f3",t.arc(e.x,e.y,20,0,2*Math.PI),t.fill(),t.fillStyle="#ffffff",t.font="14px Arial",t.textAlign="center",t.textBaseline="middle",t.fillText(e.name,e.x,e.y)})};return(0,S.jsxs)(P,{children:[(0,S.jsx)(k,{children:(0,S.jsxs)(C,{to:"/algorithms/problems",children:[(0,S.jsx)(w.QVr,{})," Back to Problems"]})}),(0,S.jsxs)(M,{children:[(0,S.jsx)(E,{children:"Chinese Postman Problem"}),(0,S.jsx)(T,{children:"The Chinese Postman Problem (also known as the Route Inspection Problem) aims to find the shortest route that visits every edge of a graph at least once, returning to the starting point."})]}),(0,S.jsxs)(_,{children:[(0,S.jsx)(q,{children:"How Chinese Postman Problem Works:"}),(0,S.jsx)(B,{children:"1. If all vertices have even degree, the graph has an Eulerian circuit, which is the optimal solution."}),(0,S.jsx)(B,{children:"2. If some vertices have odd degree, identify them and compute the shortest paths between each pair."}),(0,S.jsx)(B,{children:"3. Find a minimum-weight perfect matching for the odd-degree vertices."}),(0,S.jsx)(B,{children:"4. Add duplicate edges to the graph according to the matching."}),(0,S.jsx)(B,{children:"5. Find an Eulerian circuit in the resulting graph."})]}),(0,S.jsxs)(I,{children:[(0,S.jsxs)(V,{value:d,onChange:e=>{h(parseInt(e.target.value,10))},children:[(0,S.jsx)("option",{value:"1000",children:"Slow"}),(0,S.jsx)("option",{value:"500",children:"Medium"}),(0,S.jsx)("option",{value:"200",children:"Fast"})]}),!s||l?(0,S.jsxs)(D,{onClick:()=>{0===n.length&&(()=>{if(0===e.vertices.length||0===e.edges.length)return;a(!1),c(!1),o(0);const t=[],n=e.edges.map(e=>(0,v.A)((0,v.A)({},e),{},{visited:!1,duplicated:!1})),i=Array(e.vertices.length).fill(0);n.forEach(e=>{i[e.from]++,i[e.to]++});const s=i.map((e,t)=>({id:t,degree:e})).filter(e=>e.degree%2===1).map(e=>e.id);if(t.push({edges:[...n],currentPath:[],description:"Step 1: Identify vertices with odd degree.",currentStep:"Found ".concat(s.length," vertices with odd degree: ").concat(s.map(t=>e.vertices[t].name).join(", ")),totalDistance:0}),0===s.length)t.push({edges:[...n],currentPath:[],description:"The graph already has an Eulerian circuit, so no additional edges are needed.",currentStep:"Since all vertices have even degree, we can find an Eulerian circuit directly.",totalDistance:p(n)});else{t.push({edges:[...n],currentPath:[],description:"Step 2: Calculate shortest paths between odd-degree vertices.",currentStep:"Using Floyd-Warshall algorithm to find all-pairs shortest paths.",totalDistance:p(n)});const{dist:r,next:i}=u(e.vertices.length,n);t.push({edges:[...n],currentPath:[],description:"Step 3: Find minimum-weight perfect matching for odd-degree vertices.",currentStep:"Using a greedy approach to match odd-degree vertices.",totalDistance:p(n)});const o=[],a=[...s];for(;a.length>0;){const s=a.pop();let l=1/0,c=-1;for(let e=0;e<a.length;e++){const t=a[e];r[s][t]<l&&(l=r[s][t],c=e)}if(-1!==c){const l=a[c];a.splice(c,1);const d=f(s,l,i,r);o.push(...d),t.push({edges:[...n],currentPath:[],description:"Matching vertices ".concat(e.vertices[s].name," and ").concat(e.vertices[l].name,"."),currentStep:"Adding shortest path between vertices, distance: ".concat(r[s][l]),totalDistance:p(n)})}}for(const e of o){const t=n.findIndex(t=>t.from===e.from&&t.to===e.to||t.from===e.to&&t.to===e.from);-1!==t?n.push((0,v.A)((0,v.A)({},n[t]),{},{duplicated:!0})):n.push({from:e.from,to:e.to,weight:e.weight,visited:!1,duplicated:!0})}t.push({edges:[...n],currentPath:[],description:"Step 4: Add duplicate edges to balance the graph.",currentStep:"Added ".concat(o.length," duplicate edges to make all vertices have even degree."),totalDistance:p(n)})}t.push({edges:[...n],currentPath:[],description:"Step 5: Find an Eulerian circuit in the modified graph.",currentStep:"Using Hierholzer's algorithm to find the circuit.",totalDistance:p(n)});const l=x(e.vertices.length,n),d=n.map(e=>(0,v.A)((0,v.A)({},e),{},{visited:!0}));t.push({edges:[...d],currentPath:l,description:"Final Chinese Postman tour.",currentStep:"Total distance: ".concat(p(d)),totalDistance:p(d)}),r(t),o(0)})(),a(!0),c(!1)},children:[(0,S.jsx)(w.gSK,{})," ",l?"Resume":"Start"]}):(0,S.jsxs)(D,{onClick:()=>{c(!0)},children:[(0,S.jsx)(w.kwt,{})," Pause"]}),(0,S.jsxs)(D,{onClick:()=>{i>0&&o(e=>e-1)},disabled:0===i||s&&!l,children:[(0,S.jsx)(w.ttb,{})," Back"]}),(0,S.jsxs)(D,{onClick:()=>{i<n.length-1&&o(e=>e+1)},disabled:i>=n.length-1||s&&!l,children:[(0,S.jsx)(w.FH8,{})," Forward"]}),(0,S.jsxs)(D,{onClick:()=>{a(!1),c(!1),o(0),g()},disabled:s&&!l,children:[(0,S.jsx)(w.EEI,{})," Reset"]})]}),(0,S.jsx)(F,{children:(0,S.jsx)(z,{children:(0,S.jsx)(R,{ref:m,width:600,height:400})})}),n.length>0&&i<n.length&&(0,S.jsxs)(_,{children:[(0,S.jsx)(q,{children:"Current Step:"}),(0,S.jsx)(B,{children:n[i].description}),(0,S.jsx)(B,{children:n[i].currentStep}),n[i].totalDistance>0&&(0,S.jsxs)(B,{children:[(0,S.jsx)("strong",{children:"Total Distance: "}),n[i].totalDistance]})]}),(0,S.jsxs)(_,{children:[(0,S.jsx)(q,{children:"Time & Space Complexity:"}),(0,S.jsxs)(B,{children:[(0,S.jsx)("strong",{children:"Time Complexity:"})," O(V\xb3) where V is the number of vertices, dominated by the Floyd-Warshall algorithm."]}),(0,S.jsxs)(B,{children:[(0,S.jsx)("strong",{children:"Space Complexity:"})," O(V\xb2 + E) for the distance matrix and the graph representation."]})]}),(0,S.jsxs)(_,{children:[(0,S.jsx)(q,{children:"Applications of Chinese Postman Problem:"}),(0,S.jsx)(B,{children:"\u2022 Mail delivery and route planning for postal services"}),(0,S.jsx)(B,{children:"\u2022 Street sweeping and snow removal"}),(0,S.jsx)(B,{children:"\u2022 Garbage collection"}),(0,S.jsx)(B,{children:"\u2022 Network maintenance and inspection"}),(0,S.jsx)(B,{children:"\u2022 DNA sequencing"})]})]})}}}]);