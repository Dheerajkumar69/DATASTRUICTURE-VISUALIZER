"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[1748],{85283:(e,n,t)=>{t.d(n,{A:()=>r});const r={hljs:{display:"block",overflowX:"auto",padding:"0.5em",background:"#1E1E1E",color:"#DCDCDC"},"hljs-keyword":{color:"#569CD6"},"hljs-literal":{color:"#569CD6"},"hljs-symbol":{color:"#569CD6"},"hljs-name":{color:"#569CD6"},"hljs-link":{color:"#569CD6",textDecoration:"underline"},"hljs-built_in":{color:"#4EC9B0"},"hljs-type":{color:"#4EC9B0"},"hljs-number":{color:"#B8D7A3"},"hljs-class":{color:"#B8D7A3"},"hljs-string":{color:"#D69D85"},"hljs-meta-string":{color:"#D69D85"},"hljs-regexp":{color:"#9A5334"},"hljs-template-tag":{color:"#9A5334"},"hljs-subst":{color:"#DCDCDC"},"hljs-function":{color:"#DCDCDC"},"hljs-title":{color:"#DCDCDC"},"hljs-params":{color:"#DCDCDC"},"hljs-formula":{color:"#DCDCDC"},"hljs-comment":{color:"#57A64A",fontStyle:"italic"},"hljs-quote":{color:"#57A64A",fontStyle:"italic"},"hljs-doctag":{color:"#608B4E"},"hljs-meta":{color:"#9B9B9B"},"hljs-meta-keyword":{color:"#9B9B9B"},"hljs-tag":{color:"#9B9B9B"},"hljs-variable":{color:"#BD63C5"},"hljs-template-variable":{color:"#BD63C5"},"hljs-attr":{color:"#9CDCFE"},"hljs-attribute":{color:"#9CDCFE"},"hljs-builtin-name":{color:"#9CDCFE"},"hljs-section":{color:"gold"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"},"hljs-bullet":{color:"#D7BA7D"},"hljs-selector-tag":{color:"#D7BA7D"},"hljs-selector-id":{color:"#D7BA7D"},"hljs-selector-class":{color:"#D7BA7D"},"hljs-selector-attr":{color:"#D7BA7D"},"hljs-selector-pseudo":{color:"#D7BA7D"},"hljs-addition":{backgroundColor:"#144212",display:"inline-block",width:"100%"},"hljs-deletion":{backgroundColor:"#600",display:"inline-block",width:"100%"}}},91748:(e,n,t)=>{t.r(n),t.d(n,{default:()=>Q});var r,o,s,i,a,l,d,c,h,g,p,m,u,x,f,j,b,v,y,k=t(57528),S=t(9950),A=t(44752),D=t(42074),C=t(54826),w=t(85283),N=t(44414);const B=(0,S.lazy)(()=>Promise.all([t.e(2793),t.e(4412),t.e(8925),t.e(7874)]).then(t.bind(t,67874))),F=A.Ay.div(r||(r=(0,k.A)(["\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),E=A.Ay.div(o||(o=(0,k.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n"]))),z=(0,A.Ay)(D.N_)(s||(s=(0,k.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  font-weight: 500;\n  text-decoration: none;\n  margin-right: 1rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.primary),M=A.Ay.div(i||(i=(0,k.A)(["\n  margin-bottom: 2rem;\n"]))),O=A.Ay.h1(a||(a=(0,k.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  color: ",";\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1.5rem;\n  }\n"])),e=>e.theme.colors.text),R=A.Ay.p(l||(l=(0,k.A)(["\n  font-size: 1rem;\n  color: ",";\n  max-width: 800px;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.textLight),P=A.Ay.div(d||(d=(0,k.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  max-width: 800px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n    gap: 0.5rem;\n  }\n"]))),T=A.Ay.button(c||(c=(0,k.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: 480px) {\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    \n    svg {\n      margin-right: 0.25rem;\n    }\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.text,e=>e.theme.colors.border,e=>e.theme.colors.hover),I=A.Ay.div(h||(h=(0,k.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n"]))),J=A.Ay.label(g||(g=(0,k.A)(["\n  font-size: 0.9rem;\n  color: ",";\n  white-space: nowrap;\n"])),e=>e.theme.colors.textLight),L=A.Ay.input(p||(p=(0,k.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: ",";\n  color: ",";\n  width: 60px;\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.colors.card,e=>e.theme.colors.text),G=A.Ay.select(m||(m=(0,k.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: ",";\n  color: ",";\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.colors.card,e=>e.theme.colors.text),V=A.Ay.div(u||(u=(0,k.A)(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2rem;\n  max-width: 800px;\n"]))),_=A.Ay.canvas(x||(x=(0,k.A)(["\n  width: 100%;\n  height: 400px;\n  border: 2px solid ",";\n  border-radius: 8px;\n  background-color: ",";\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n"])),e=>e.theme.colors.border,e=>e.theme.colors.background),W=A.Ay.div(f||(f=(0,k.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  margin-bottom: 2rem;\n  max-width: 800px;\n  width: 100%;\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),H=A.Ay.h3(j||(j=(0,k.A)(["\n  margin-bottom: 0.5rem;\n  color: ",";\n  font-size: 1.2rem;\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n  }\n"])),e=>e.theme.colors.text),q=A.Ay.p(b||(b=(0,k.A)(["\n  color: ",";\n  margin-bottom: 0.5rem;\n  line-height: 1.5;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.textLight),K=A.Ay.div(v||(v=(0,k.A)(["\n  max-width: 800px;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  margin-top: 1rem;\n  width: 100%;\n"]))),Q=(A.Ay.div(y||(y=(0,k.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  margin-top: 1rem;\n  font-family: monospace;\n  font-size: 0.9rem;\n  white-space: pre-wrap;\n"])),e=>e.theme.colors.background,e=>e.theme.colors.border),()=>{const[e,n]=(0,S.useState)({nodes:[],edges:[],adjacencyList:{}}),[t,r]=(0,S.useState)([]),[o,s]=(0,S.useState)(0),[i,a]=(0,S.useState)(!1),[l,d]=(0,S.useState)(!1),[c,h]=(0,S.useState)(500),[g,p]=(0,S.useState)(0),[m,u]=(0,S.useState)(8),[x,f]=(0,S.useState)(""),j=(0,S.useRef)(null);(0,S.useEffect)(()=>{v()},[m]),(0,S.useEffect)(()=>{let e;return i&&!l&&o<t.length-1?e=setTimeout(()=>{s(e=>e+1)},c):o>=t.length-1&&a(!1),()=>{e&&clearTimeout(e)}},[i,l,o,t,c]),(0,S.useEffect)(()=>{if(t.length>0&&o<t.length){const e=t[o];f(e.description),b(e.graph)}},[o,t]);const b=e=>{const n=j.current;if(!n)return;const t=n.getContext("2d");if(!t)return;const r=n.getBoundingClientRect();n.width=r.width,n.height=r.height,t.clearRect(0,0,n.width,n.height),e.edges.forEach(n=>{const r=e.nodes[n.source],o=e.nodes[n.target];t.beginPath(),t.moveTo(r.x,r.y),t.lineTo(o.x,o.y),t.strokeStyle=n.color,t.lineWidth=2,t.stroke();const s=(r.x+o.x)/2,i=(r.y+o.y)/2;t.fillStyle="#666",t.font="12px Arial",t.fillText(n.weight.toString(),s,i)}),e.nodes.forEach(e=>{t.beginPath(),t.arc(e.x,e.y,e.radius,0,2*Math.PI),t.fillStyle=e.color,t.fill(),t.strokeStyle="#333",t.lineWidth=2,t.stroke(),t.fillStyle=e.textColor,t.font="bold 14px Arial",t.textAlign="center",t.textBaseline="middle",t.fillText(e.label,e.x,e.y)})},v=()=>{const e=[],t=[],o={};for(let n=0;n<m;n++){const t=n/m*Math.PI*2,r=400+150*Math.cos(t),s=200+150*Math.sin(t);e.push({id:n,x:r,y:s,radius:20,color:"#fff",textColor:"#000",visited:!1,inStack:!1,processing:!1,label:n.toString()}),o[n]=[]}for(let n=0;n<m;n++){const e=Math.floor(2*Math.random())+2;for(let r=0;r<e;r++){const e=Math.floor(Math.random()*m);if(e===n||o[n].includes(e))continue;const r=Math.floor(9*Math.random())+1;t.push({source:n,target:e,weight:r,color:"#aaa"}),o[n].push(e),o[e].push(n)}}const i={nodes:e,edges:t,adjacencyList:o};n(i),b(i),r([]),s(0),f('Graph initialized. Select a start node and click "Start" to begin DFS traversal.')};return(0,N.jsxs)(F,{children:[(0,N.jsx)(E,{children:(0,N.jsxs)(z,{to:"/algorithms/graph",children:[(0,N.jsx)(C.QVr,{})," Back to Graph Algorithms"]})}),(0,N.jsxs)(M,{children:[(0,N.jsx)(O,{children:"Depth-First Search (DFS)"}),(0,N.jsx)(R,{children:"Depth-First Search (DFS) is a graph traversal algorithm that explores as far as possible along each branch before backtracking. DFS uses a stack data structure (or recursion) for its implementation, which follows the Last-In-First-Out (LIFO) principle. DFS is commonly used for cycle detection, topological sorting, finding connected components, and solving puzzles like mazes."})]}),(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"How DFS Works:"}),(0,N.jsx)(q,{children:"1. Select a starting node, mark it as visited, and add it to a stack."}),(0,N.jsx)(q,{children:"2. Pop a node from the stack and explore all its unvisited adjacent nodes."}),(0,N.jsx)(q,{children:"3. For each unvisited neighbor, mark it, add it to the stack, and recursively apply step 2."}),(0,N.jsx)(q,{children:"4. Backtrack when all neighbors of a node have been visited."}),(0,N.jsx)(q,{children:"5. Repeat steps 2-4 until the stack is empty."})]}),(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"Graph Settings:"}),(0,N.jsxs)(I,{children:[(0,N.jsx)(J,{children:"Number of Nodes:"}),(0,N.jsx)(L,{type:"number",min:"3",max:"12",value:m,onChange:e=>{const n=parseInt(e.target.value,10);!isNaN(n)&&n>=3&&n<=12&&u(n)},disabled:i&&!l}),(0,N.jsxs)(T,{onClick:v,disabled:i&&!l,children:[(0,N.jsx)(C.dhv,{})," Regenerate Graph"]})]}),(0,N.jsxs)(I,{children:[(0,N.jsx)(J,{children:"Start Node:"}),(0,N.jsx)(G,{value:g,onChange:e=>{const n=parseInt(e.target.value,10);p(n)},children:Array.from({length:m},(e,n)=>(0,N.jsx)("option",{value:n,children:n},n))})]})]}),(0,N.jsxs)(P,{children:[(0,N.jsxs)(G,{value:c,onChange:e=>{h(parseInt(e.target.value,10))},children:[(0,N.jsx)("option",{value:"1000",children:"Slow"}),(0,N.jsx)("option",{value:"500",children:"Medium"}),(0,N.jsx)("option",{value:"200",children:"Fast"})]}),!i||l?(0,N.jsxs)(T,{onClick:()=>{0===t.length&&(()=>{if(0===e.nodes.length)return;a(!1),d(!1),s(0);const n=[],t=[],o=[g],i=JSON.parse(JSON.stringify(e));for(i.nodes[g].inStack=!0,i.nodes[g].color="#9c27b0",n.push({currentNode:null,stack:[...o],visited:[...t],description:"Added starting node ".concat(g," to the stack."),graph:i});o.length>0;){const r=o.pop();if(t.includes(r))continue;t.push(r);const s=JSON.parse(JSON.stringify(n[n.length-1].graph));s.nodes[r].processing=!0,s.nodes[r].inStack=!1,s.nodes[r].color="#ff9900",n.push({currentNode:r,stack:[...o],visited:[...t],description:"Processing node ".concat(r,"."),graph:s});const i=[...e.adjacencyList[r]||[]];i.reverse();for(const e of i)if(!t.includes(e)&&!o.includes(e)){o.push(e);const s=JSON.parse(JSON.stringify(n[n.length-1].graph));s.nodes[e].inStack=!0,s.nodes[e].color="#9c27b0";const i=s.edges.findIndex(n=>n.source===r&&n.target===e||n.source===e&&n.target===r);-1!==i&&(s.edges[i].color="#3498db"),n.push({currentNode:r,stack:[...o],visited:[...t],description:"Added node ".concat(e," to the stack."),graph:s})}const a=JSON.parse(JSON.stringify(n[n.length-1].graph));a.nodes[r].visited=!0,a.nodes[r].processing=!1,a.nodes[r].color="#4caf50",a.nodes[r].textColor="#fff",n.push({currentNode:null,stack:[...o],visited:[...t],description:"Marked node ".concat(r," as visited."),graph:a})}n.push({currentNode:null,stack:[],visited:t,description:"DFS traversal complete. Visited nodes: ".concat(t.join(", "),"."),graph:n[n.length-1].graph}),r(n),s(0)})(),a(!0),d(!1)},children:[(0,N.jsx)(C.gSK,{})," ",l?"Resume":"Start"]}):(0,N.jsxs)(T,{onClick:()=>{d(!0)},children:[(0,N.jsx)(C.kwt,{})," Pause"]}),(0,N.jsxs)(T,{onClick:()=>{o>0&&s(e=>e-1)},disabled:0===o||i&&!l,children:[(0,N.jsx)(C.ttb,{})," Back"]}),(0,N.jsxs)(T,{onClick:()=>{o<t.length-1&&s(e=>e+1)},disabled:o>=t.length-1||i&&!l,children:[(0,N.jsx)(C.FH8,{})," Forward"]}),(0,N.jsxs)(T,{onClick:()=>{a(!1),d(!1),s(0);const n=JSON.parse(JSON.stringify(e));n.nodes.forEach(e=>{e.visited=!1,e.inStack=!1,e.processing=!1,e.color="#fff",e.textColor="#000"}),n.edges.forEach(e=>{e.color="#aaa"}),b(n),f('Reset. Click "Start" to begin DFS traversal.')},disabled:i&&!l,children:[(0,N.jsx)(C.EEI,{})," Reset"]})]}),x&&(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"Current Step:"}),(0,N.jsx)(q,{children:x}),t.length>0&&o<t.length&&(0,N.jsxs)("div",{children:[(0,N.jsxs)(q,{children:[(0,N.jsx)("strong",{children:"Stack: "}),t[o].stack.length>0?"[".concat(t[o].stack.join(", "),"]"):"Empty"]}),(0,N.jsxs)(q,{children:[(0,N.jsx)("strong",{children:"Visited: "}),t[o].visited.length>0?"[".concat(t[o].visited.join(", "),"]"):"None"]})]})]}),(0,N.jsx)(V,{children:(0,N.jsx)(_,{ref:j})}),(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"DFS Algorithm Implementation:"}),(0,N.jsx)(K,{children:(0,N.jsx)(S.Suspense,{fallback:(0,N.jsx)("div",{children:"Loading code..."}),children:(0,N.jsx)(B,{language:"javascript",style:w.A,children:"/**\n * Performs Depth-First Search traversal on a graph\n * @param {Map<number, number[]>} graph - Adjacency list representation of the graph\n * @param {number} startNode - Node to start DFS from\n * @returns {number[]} - The order of visited nodes\n */\nfunction dfs(graph, startNode) {\n  // Array to store visited nodes in order\n  const visited = [];\n  \n  // Set to keep track of visited nodes\n  const visitedSet = new Set();\n  \n  // Stack for DFS (iterative implementation)\n  const stack = [startNode];\n  \n  while (stack.length > 0) {\n    // Pop the top node from the stack\n    const currentNode = stack.pop();\n    \n    // Skip if already visited\n    if (visitedSet.has(currentNode)) {\n      continue;\n    }\n    \n    // Mark as visited and add to result\n    visitedSet.add(currentNode);\n    visited.push(currentNode);\n    \n    // Get neighbors of the current node\n    const neighbors = graph.get(currentNode) || [];\n    \n    // Add neighbors to stack in reverse order\n    // (to process them in the original order when popped)\n    for (let i = neighbors.length - 1; i >= 0; i--) {\n      const neighbor = neighbors[i];\n      if (!visitedSet.has(neighbor)) {\n        stack.push(neighbor);\n      }\n    }\n  }\n  \n  return visited;\n}\n\n// Recursive DFS implementation\nfunction dfsRecursive(graph, startNode) {\n  const visited = [];\n  const visitedSet = new Set();\n  \n  function explore(node) {\n    // Mark the current node as visited\n    visitedSet.add(node);\n    visited.push(node);\n    \n    // Explore all unvisited neighbors\n    const neighbors = graph.get(node) || [];\n    for (const neighbor of neighbors) {\n      if (!visitedSet.has(neighbor)) {\n        explore(neighbor);\n      }\n    }\n  }\n  \n  explore(startNode);\n  return visited;\n}\n\n// Example usage:\nconst graph = new Map();\ngraph.set(0, [1, 2]);\ngraph.set(1, [0, 3, 4]);\ngraph.set(2, [0, 5]);\ngraph.set(3, [1]);\ngraph.set(4, [1, 6]);\ngraph.set(5, [2]);\ngraph.set(6, [4]);\n\nconst visitedOrder = dfs(graph, 0);\n// Example output: DFS traversal order: [0, 2, 5, 1, 4, 6, 3]"})})})]}),(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"Time & Space Complexity:"}),(0,N.jsxs)(q,{children:[(0,N.jsx)("strong",{children:"Time Complexity:"})," O(V + E) where V is the number of vertices and E is the number of edges in the graph. Each vertex and edge is visited once."]}),(0,N.jsxs)(q,{children:[(0,N.jsx)("strong",{children:"Space Complexity:"})," O(V) where V is the number of vertices. This is needed for the stack (or recursion stack) and visited set."]})]}),(0,N.jsxs)(W,{children:[(0,N.jsx)(H,{children:"Applications of DFS:"}),(0,N.jsx)(q,{children:"\u2022 Cycle detection in graphs"}),(0,N.jsx)(q,{children:"\u2022 Topological sorting for DAGs (Directed Acyclic Graphs)"}),(0,N.jsx)(q,{children:"\u2022 Finding strongly connected components in directed graphs"}),(0,N.jsx)(q,{children:"\u2022 Solving puzzles such as mazes"}),(0,N.jsx)(q,{children:"\u2022 Generating spanning trees"}),(0,N.jsx)(q,{children:"\u2022 Pathfinding in games"}),(0,N.jsx)(q,{children:"\u2022 Analyzing and traversing file systems"})]})]})})}}]);