"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[1846],{71846:(n,e,r)=>{r.r(e),r.d(e,{default:()=>T});var i,t,s,o,l,a,h,d,m,c,x,g=r(57528),p=(r(9950),r(44752)),j=r(42074),u=r(74930),b=r(54826),A=r(44414);const y=p.Ay.div(i||(i=(0,g.A)(["\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),f=p.Ay.h1(t||(t=(0,g.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  color: ",";\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n"])),n=>n.theme.colors.text),v=p.Ay.p(s||(s=(0,g.A)(["\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n  color: ",";\n  max-width: 800px;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n"])),n=>n.theme.colors.textLight),z=p.Ay.div(o||(o=(0,g.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 2rem;\n  margin-bottom: 3rem;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 1.5rem;\n  }\n"]))),S=(0,p.Ay)(j.N_)(l||(l=(0,g.A)(["\n  background-color: ",";\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  border: 1px solid ",';\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  }\n\n  &::after {\n    content: "";\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100px;\n    height: 100px;\n    background-color: ',"05;\n    border-radius: 50%;\n    transform: translate(30%, -30%);\n    z-index: 0;\n  }\n"])),n=>n.theme.colors.card,n=>n.theme.colors.border,n=>n.theme.colors.primary),w=p.Ay.div(a||(a=(0,g.A)(["\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: ","15;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 1.25rem;\n  position: relative;\n  z-index: 1;\n  color: ",";\n"])),n=>n.theme.colors.primary,n=>n.theme.colors.primary),k=p.Ay.h2(h||(h=(0,g.A)(["\n  font-size: 1.5rem;\n  margin-bottom: 0.75rem;\n  color: ",";\n  position: relative;\n  z-index: 1;\n"])),n=>n.theme.colors.text),P=p.Ay.p(d||(d=(0,g.A)(["\n  color: ",";\n  line-height: 1.5;\n  margin-bottom: 1.5rem;\n  flex: 1;\n  position: relative;\n  z-index: 1;\n"])),n=>n.theme.colors.textLight),B=p.Ay.ul(m||(m=(0,g.A)(["\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 1.5rem;\n  position: relative;\n  z-index: 1;\n"]))),C=p.Ay.li(c||(c=(0,g.A)(["\n  padding: 0.5rem 0;\n  font-size: 0.95rem;\n  color: ",';\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: "\u2022";\n    color: ',";\n    font-weight: bold;\n    display: inline-block;\n    width: 1rem;\n    margin-right: 0.5rem;\n  }\n"])),n=>n.theme.colors.text,n=>n.theme.colors.primary),E=p.Ay.span(x||(x=(0,g.A)(["\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  color: ",";\n  position: relative;\n  z-index: 1;\n  \n  svg {\n    margin-left: 0.5rem;\n    transition: transform 0.2s ease;\n  }\n  \n  &:hover svg {\n    transform: translateX(4px);\n  }\n"])),n=>n.theme.colors.primary),T=()=>(0,A.jsxs)(y,{children:[(0,A.jsx)(f,{children:"Algorithms"}),(0,A.jsx)(v,{children:"Algorithms are step-by-step procedures for solving problems or accomplishing tasks. This interactive visualizer helps you understand various algorithms through animated visualizations and code implementations. Explore different categories of algorithms to see how they work and learn their practical applications."}),(0,A.jsxs)(z,{children:[(0,A.jsxs)(S,{to:"/algorithms/sorting",children:[(0,A.jsx)(w,{children:(0,A.jsx)(u.vQY,{size:28})}),(0,A.jsx)(k,{children:"Sorting Algorithms"}),(0,A.jsx)(P,{children:"Algorithms that arrange elements in a specific order, typically in ascending or descending sequence."}),(0,A.jsxs)(B,{children:[(0,A.jsx)(C,{children:"Bubble Sort, Selection Sort, Insertion Sort"}),(0,A.jsx)(C,{children:"Merge Sort, Quick Sort, Heap Sort"}),(0,A.jsx)(C,{children:"Radix Sort, Counting Sort, Bucket Sort"})]}),(0,A.jsxs)(E,{children:["Explore Sorting Algorithms ",(0,A.jsx)(u.dyV,{size:16})]})]}),(0,A.jsxs)(S,{to:"/algorithms/searching",children:[(0,A.jsx)(w,{children:(0,A.jsx)(u.CKj,{size:28})}),(0,A.jsx)(k,{children:"Searching Algorithms"}),(0,A.jsx)(P,{children:"Algorithms designed to retrieve information stored within some data structure or calculated in the search space."}),(0,A.jsxs)(B,{children:[(0,A.jsx)(C,{children:"Linear Search, Binary Search"}),(0,A.jsx)(C,{children:"BFS (Breadth-First Search), DFS (Depth-First Search)"}),(0,A.jsx)(C,{children:"Jump Search, Interpolation Search"})]}),(0,A.jsxs)(E,{children:["Explore Searching Algorithms ",(0,A.jsx)(u.dyV,{size:16})]})]}),(0,A.jsxs)(S,{to:"/algorithms/graph",children:[(0,A.jsx)(w,{children:(0,A.jsx)(u.QPV,{size:28})}),(0,A.jsx)(k,{children:"Graph Algorithms"}),(0,A.jsx)(P,{children:"Algorithms that perform computations on graphs or networks, including pathfinding and minimum spanning trees."}),(0,A.jsxs)(B,{children:[(0,A.jsx)(C,{children:"A* Search Algorithm"}),(0,A.jsx)(C,{children:"Kruskal's Algorithm (Minimum Spanning Tree)"}),(0,A.jsx)(C,{children:"Prim's Algorithm (Minimum Spanning Tree)"})]}),(0,A.jsxs)(E,{children:["Explore Graph Algorithms ",(0,A.jsx)(u.dyV,{size:16})]})]}),(0,A.jsxs)(S,{to:"/algorithms/backtracking",children:[(0,A.jsx)(w,{children:(0,A.jsx)(b.gq4,{size:24})}),(0,A.jsx)(k,{children:"Backtracking Algorithms"}),(0,A.jsx)(P,{children:"Algorithms that build solutions incrementally and abandon a path when they determine it cannot lead to a valid solution."}),(0,A.jsxs)(B,{children:[(0,A.jsx)(C,{children:"N-Queens Problem"}),(0,A.jsx)(C,{children:"Traveling Salesman Problem"})]}),(0,A.jsxs)(E,{children:["Explore Backtracking Algorithms ",(0,A.jsx)(u.dyV,{size:16})]})]}),(0,A.jsxs)(S,{to:"/algorithms/problems",children:[(0,A.jsx)(w,{children:(0,A.jsx)(b.yRn,{size:24})}),(0,A.jsx)(k,{children:"Algorithm Problems"}),(0,A.jsx)(P,{children:"Classic algorithmic problems with interactive visualizations to help you understand their solutions and implementations."}),(0,A.jsxs)(B,{children:[(0,A.jsx)(C,{children:"Graph Problems (Cycle Detection, Eulerian Path)"}),(0,A.jsx)(C,{children:"Grid Problems (Knight's Tour, Number of Islands)"}),(0,A.jsx)(C,{children:"Tree Problems (Lowest Common Ancestor)"})]}),(0,A.jsxs)(E,{children:["Explore Algorithm Problems ",(0,A.jsx)(u.dyV,{size:16})]})]})]})]})}}]);