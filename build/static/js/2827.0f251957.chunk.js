"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[2827],{12827:(e,t,n)=>{n.r(t),n.d(t,{default:()=>O});var i,r,o,s,a,c,l,h,d,m,u,x,p,g,b,f,j,y,C,D,v=n(57528),k=n(9950),w=n(44752),A=n(54826),P=n(42074),S=n(85283),B=n(44414);const T=(0,k.lazy)(()=>Promise.all([n.e(2793),n.e(4412),n.e(8925),n.e(7874)]).then(n.bind(n,67874))),z=w.Ay.div(i||(i=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n"]))),E=w.Ay.div(r||(r=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n"]))),M=(0,w.Ay)(P.N_)(o||(o=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  font-weight: 500;\n  text-decoration: none;\n  margin-right: 1rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.primary),F=w.Ay.div(s||(s=(0,v.A)(["\n  margin-bottom: 2rem;\n"]))),R=w.Ay.h1(a||(a=(0,v.A)(["\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  color: ",";\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1.5rem;\n  }\n"])),e=>e.theme.colors.text),H=w.Ay.p(c||(c=(0,v.A)(["\n  font-size: 1rem;\n  color: ",";\n  max-width: 800px;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n\n  @media (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n"])),e=>e.theme.colors.textLight),I=w.Ay.div(l||(l=(0,v.A)(["\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  max-width: 800px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n    gap: 0.5rem;\n  }\n"]))),_=w.Ay.button(h||(h=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  background-color: ",";\n  color: ",";\n  border: 1px solid ",";\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ",";\n  }\n  \n  svg {\n    margin-right: 0.5rem;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: 480px) {\n    padding: 0.5rem;\n    font-size: 0.8rem;\n    \n    svg {\n      margin-right: 0.25rem;\n    }\n  }\n"])),e=>e.theme.colors.card,e=>e.theme.colors.text,e=>e.theme.colors.border,e=>e.theme.colors.hover),L=w.Ay.div(d||(d=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n"]))),W=w.Ay.span(m||(m=(0,v.A)(["\n  font-size: 0.9rem;\n  color: ",";\n  white-space: nowrap;\n"])),e=>e.theme.colors.textLight),q=w.Ay.select(u||(u=(0,v.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: ",";\n  color: ",";\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:t}=e;return t.colors.border},e=>e.theme.colors.card,e=>e.theme.colors.text),N=w.Ay.div(x||(x=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2rem;\n  max-width: 800px;\n  width: 100%;\n"]))),$=w.Ay.canvas(p||(p=(0,v.A)(["\n  width: 100%;\n  max-width: 600px;\n  min-height: 400px;\n  border: 2px solid ",";\n  border-radius: 8px;\n  background-color: ",";\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n"])),e=>e.theme.colors.border,e=>e.theme.colors.background),G=w.Ay.div(g||(g=(0,v.A)(["\n  padding: 1rem;\n  background-color: ",";\n  border-radius: 0.5rem;\n  border: 1px solid ",";\n  margin-bottom: 2rem;\n  max-width: 800px;\n  width: 100%;\n"])),e=>e.theme.colors.card,e=>e.theme.colors.border),K=w.Ay.h3(b||(b=(0,v.A)(["\n  margin-bottom: 0.5rem;\n  color: ",";\n  font-size: 1.2rem;\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n  }\n"])),e=>e.theme.colors.text),Q=w.Ay.p(f||(f=(0,v.A)(["\n  color: ",";\n  margin-bottom: 0.5rem;\n  line-height: 1.5;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.textLight),U=w.Ay.div(j||(j=(0,v.A)(["\n  max-width: 800px;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  margin-top: 1rem;\n  width: 100%;\n"]))),V=w.Ay.div(y||(y=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  max-width: 800px;\n  width: 100%;\n  overflow-x: auto;\n"]))),X=w.Ay.div(C||(C=(0,v.A)(["\n  display: flex;\n  justify-content: center;\n"]))),J=w.Ay.div(D||(D=(0,v.A)(["\n  font-family: monospace;\n  padding: 0.5rem;\n  min-width: 3rem;\n  text-align: center;\n  border: 1px solid ",";\n  background-color: ",";\n  color: ",";\n"])),e=>e.theme.colors.border,e=>e.isHeader?e.theme.colors.hover:e.theme.colors.card,e=>e.theme.colors.text),O=()=>{const[e,t]=(0,k.useState)([]),[n,i]=(0,k.useState)([]),[r,o]=(0,k.useState)(5),[s,a]=(0,k.useState)(!1),[c,l]=(0,k.useState)(!1),[h,d]=(0,k.useState)([]),[m,u]=(0,k.useState)(0),[x,p]=(0,k.useState)(""),[g,b]=(0,k.useState)(500),[f,j]=(0,k.useState)([]),[y,C]=(0,k.useState)(1/0),D=(0,k.useRef)(null);(0,k.useEffect)(()=>{w()},[r]),(0,k.useEffect)(()=>{let e;return s&&!c&&m<h.length-1?e=setTimeout(()=>{u(e=>e+1)},g):m>=h.length-1&&a(!1),()=>{e&&clearTimeout(e)}},[s,c,m,h,g]),(0,k.useEffect)(()=>{if(h.length>0&&m<h.length){const e=h[m];p(e.description),j(e.bestPath),C(e.bestDistance),v(e)}},[m,h]);const v=(0,k.useCallback)(t=>{const n=D.current;if(!n)return;const i=n.getContext("2d");if(!i)return;const r=n.getBoundingClientRect();n.width=r.width,n.height=r.height,i.clearRect(0,0,n.width,n.height);const o=40,s=Math.max(...e.map(e=>e.x)),a=Math.max(...e.map(e=>e.y)),c=(n.width-80)/s,l=(n.height-80)/a;if(t){if(t.currentPath.length>1){i.beginPath(),i.strokeStyle="#FFA500",i.lineWidth=2;for(let n=0;n<t.currentPath.length-1;n++){const r=e.find(e=>e.id===t.currentPath[n]),s=e.find(e=>e.id===t.currentPath[n+1]);r&&s&&(i.moveTo(o+r.x*c,o+r.y*l),i.lineTo(o+s.x*c,o+s.y*l))}i.stroke()}if(t.bestPath.length>1){i.beginPath(),i.strokeStyle="#4CAF50",i.lineWidth=3;for(let n=0;n<t.bestPath.length;n++){const r=e.find(e=>e.id===t.bestPath[n]),s=e.find(e=>e.id===t.bestPath[(n+1)%t.bestPath.length]);r&&s&&(i.moveTo(o+r.x*c,o+r.y*l),i.lineTo(o+s.x*c,o+s.y*l))}i.stroke()}}e.forEach(e=>{i.beginPath(),i.arc(o+e.x*c,o+e.y*l,10,0,2*Math.PI),i.fillStyle="#3498db",i.fill(),i.strokeStyle="#2980b9",i.lineWidth=2,i.stroke(),i.fillStyle="#fff",i.font="10px Arial",i.textAlign="center",i.textBaseline="middle",i.fillText(e.name,o+e.x*c,o+e.y*l)})},[e]),w=(0,k.useCallback)(()=>{const e=[];for(let t=0;t<r;t++)e.push({id:t,x:Math.floor(100*Math.random()),y:Math.floor(100*Math.random()),name:String.fromCharCode(65+t)});t(e),P(e),j([]),C(1/0),u(0),d([]),p('Cities generated. Click "Start" to begin solving.')},[r]),P=e=>{const t=[];for(let n=0;n<e.length;n++){t[n]=[];for(let i=0;i<e.length;i++)if(n===i)t[n][i]=0;else{const r=e[n].x-e[i].x,o=e[n].y-e[i].y;t[n][i]=Math.floor(Math.sqrt(r*r+o*o))}}i(t),v()};return(0,B.jsxs)(z,{children:[(0,B.jsx)(E,{children:(0,B.jsxs)(M,{to:"/algorithms/backtracking",children:[(0,B.jsx)(A.QVr,{})," Back to Backtracking Algorithms"]})}),(0,B.jsxs)(F,{children:[(0,B.jsx)(R,{children:"Traveling Salesman Problem"}),(0,B.jsx)(H,{children:"The Traveling Salesman Problem (TSP) asks: \u201cGiven a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city?\u201d This is an NP-hard problem in combinatorial optimization. This visualization shows how backtracking with pruning can be used to find the optimal solution."})]}),(0,B.jsxs)(G,{children:[(0,B.jsx)(K,{children:"How to use this visualization:"}),(0,B.jsx)(Q,{children:"1. Select the number of cities using the dropdown."}),(0,B.jsx)(Q,{children:"2. Click \u201cRegenerate\u201d to create a new random set of cities."}),(0,B.jsx)(Q,{children:"3. Click \u201cStart\u201d to begin the visualization of the backtracking algorithm."}),(0,B.jsx)(Q,{children:"4. Use the controls to pause, step forward/backward, or reset the visualization."}),(0,B.jsx)(Q,{children:"5. The current path being explored is shown in orange, while the best path found so far is shown in green."})]}),(0,B.jsxs)(I,{children:[(0,B.jsxs)(L,{children:[(0,B.jsx)(W,{children:"Cities:"}),(0,B.jsxs)(q,{value:r,onChange:e=>{const t=parseInt(e.target.value,10);o(t)},disabled:s&&!c,children:[(0,B.jsx)("option",{value:"4",children:"4 Cities"}),(0,B.jsx)("option",{value:"5",children:"5 Cities"}),(0,B.jsx)("option",{value:"6",children:"6 Cities"}),(0,B.jsx)("option",{value:"7",children:"7 Cities"}),(0,B.jsx)("option",{value:"8",children:"8 Cities"})]})]}),(0,B.jsxs)(L,{children:[(0,B.jsx)(W,{children:"Speed:"}),(0,B.jsxs)(q,{value:g,onChange:e=>{b(parseInt(e.target.value,10))},children:[(0,B.jsx)("option",{value:"1000",children:"Slow"}),(0,B.jsx)("option",{value:"500",children:"Medium"}),(0,B.jsx)("option",{value:"200",children:"Fast"})]})]}),(0,B.jsx)(_,{onClick:()=>{a(!1),l(!1),w()},disabled:s&&!c,children:"Regenerate"}),!s||c?(0,B.jsxs)(_,{onClick:()=>{0===h.length&&(()=>{a(!1),l(!1),u(0),d([]),j([]),C(1/0);const t=[{path:[],currentPath:[0],bestPath:[],bestDistance:1/0,currentDistance:0,description:"Starting TSP solution. Beginning at city "+e[0].name}];let i=[],r=1/0;const o=(s,a,c)=>{if(a.size===e.length){const o=c+n[s[s.length-1]][s[0]],a=[...s];return void(o<r?(r=o,i=[...a],t.push({path:[...s],currentPath:[...s],bestPath:[...i],bestDistance:r,currentDistance:o,description:"Found new best path with distance ".concat(r,": ").concat(i.map(t=>e[t].name).join(" \u2192 ")," \u2192 ").concat(e[i[0]].name)})):t.push({path:[...s],currentPath:[...s],bestPath:[...i],bestDistance:r,currentDistance:o,description:"Path complete but not better than best (".concat(o," > ").concat(r,"): ").concat(s.map(t=>e[t].name).join(" \u2192 ")," \u2192 ").concat(e[s[0]].name)}))}if(c>=r)t.push({path:[...s],currentPath:[...s],bestPath:[...i],bestDistance:r,currentDistance:c,description:"Pruning path as current distance ".concat(c," is already >= best distance ").concat(r)});else for(let l=0;l<e.length;l++)if(!a.has(l)){const h=s[s.length-1],d=c+n[h][l];t.push({path:[...s],currentPath:[...s,l],bestPath:[...i],bestDistance:r,currentDistance:d,description:"Trying city ".concat(e[l].name," from ").concat(e[h].name,". Distance so far: ").concat(d)}),s.push(l),a.add(l),o(s,a,d),s.pop(),a.delete(l),t.push({path:[...s],currentPath:[...s],bestPath:[...i],bestDistance:r,currentDistance:c,description:"Backtracking from ".concat(e[l].name," to ").concat(e[h].name)})}},s=[0],c=new Set([0]);o(s,c,0);const h={path:[],currentPath:[],bestPath:[...i],bestDistance:r,currentDistance:0,description:"Solution complete! Best tour has distance ".concat(r,": ").concat(i.map(t=>e[t].name).join(" \u2192 ")," \u2192 ").concat(e[i[0]].name)};t.push(h),d(t),u(0)})(),a(!0),l(!1)},children:[(0,B.jsx)(A.gSK,{})," ",c?"Resume":"Start"]}):(0,B.jsxs)(_,{onClick:()=>{l(!0)},children:[(0,B.jsx)(A.kwt,{})," Pause"]}),(0,B.jsxs)(_,{onClick:()=>{m>0&&u(e=>e-1)},disabled:0===m||s&&!c,children:[(0,B.jsx)(A.ttb,{})," Back"]}),(0,B.jsxs)(_,{onClick:()=>{m<h.length-1&&u(e=>e+1)},disabled:m>=h.length-1||s&&!c,children:[(0,B.jsx)(A.FH8,{})," Forward"]}),(0,B.jsxs)(_,{onClick:()=>{a(!1),l(!1),u(0),j([]),C(1/0),v(),p('Reset. Click "Start" to begin solving.')},disabled:s&&!c,children:[(0,B.jsx)(A.EEI,{})," Reset"]})]}),x&&(0,B.jsxs)(G,{children:[(0,B.jsx)(K,{children:"Current Step:"}),(0,B.jsx)(Q,{children:x}),y!==1/0&&(0,B.jsxs)(Q,{children:["Best distance found: ",y]})]}),(0,B.jsx)(N,{children:(0,B.jsx)($,{ref:D})}),(0,B.jsxs)(G,{children:[(0,B.jsx)(K,{children:"Distance Matrix:"}),(0,B.jsxs)(V,{children:[(0,B.jsxs)(X,{children:[(0,B.jsx)(J,{isHeader:!0,children:"Cities"}),e.map(e=>(0,B.jsx)(J,{isHeader:!0,children:e.name},e.id))]}),e.map((t,i)=>(0,B.jsxs)(X,{children:[(0,B.jsx)(J,{isHeader:!0,children:t.name}),e.map((e,t)=>(0,B.jsx)(J,{children:n[i]&&void 0!==n[i][t]?n[i][t]:"-"},"".concat(i,"-").concat(t)))]},t.id))]})]}),(0,B.jsxs)(G,{children:[(0,B.jsx)(K,{children:"Implementation Code:"}),(0,B.jsx)(U,{children:(0,B.jsx)(k.Suspense,{fallback:(0,B.jsx)("div",{children:"Loading code..."}),children:(0,B.jsx)(T,{language:"javascript",style:S.A,children:"// Solving Traveling Salesman Problem using backtracking\nfunction solveTSP(distanceMatrix) {\n  const n = distanceMatrix.length;\n  let bestPath = [];\n  let bestDistance = Infinity;\n  \n  // Start with city 0\n  const startCity = 0;\n  const visited = new Set([startCity]);\n  const path = [startCity];\n  \n  function backtrack(currentPath, visitedCities, currentDistance) {\n    // Base case: all cities visited\n    if (visitedCities.size === n) {\n      // Add distance from last city back to start\n      const lastCity = currentPath[currentPath.length - 1];\n      const completeDistance = currentDistance + distanceMatrix[lastCity][startCity];\n      \n      // Check if this is a better tour\n      if (completeDistance < bestDistance) {\n        bestDistance = completeDistance;\n        bestPath = [...currentPath];\n      }\n      return;\n    }\n    \n    // Pruning: if current distance is already worse than best, stop\n    if (currentDistance >= bestDistance) {\n      return;\n    }\n    \n    // Try each unvisited city as next step\n    const lastCity = currentPath[currentPath.length - 1];\n    for (let nextCity = 0; nextCity < n; nextCity++) {\n      if (!visitedCities.has(nextCity)) {\n        // Add city to path\n        const newDistance = currentDistance + distanceMatrix[lastCity][nextCity];\n        \n        currentPath.push(nextCity);\n        visitedCities.add(nextCity);\n        \n        // Recur to build rest of path\n        backtrack(currentPath, visitedCities, newDistance);\n        \n        // Backtrack\n        currentPath.pop();\n        visitedCities.delete(nextCity);\n      }\n    }\n  }\n  \n  backtrack(path, visited, 0);\n  \n  // Complete the cycle by adding start city to the end\n  const completeTour = [...bestPath, startCity];\n  return { tour: completeTour, distance: bestDistance };\n}\n\n// Example usage:\nconst distances = [\n  [0, 10, 15, 20],\n  [10, 0, 35, 25],\n  [15, 35, 0, 30],\n  [20, 25, 30, 0]\n];\n\nconst { tour, distance } = solveTSP(distances);\nconsole.log(`Best tour: ${tour.join(' \u2192 ')}`);\n// console.log(`Tour distance: ${distance}`);"})})})]})]})}},85283:(e,t,n)=>{n.d(t,{A:()=>i});const i={hljs:{display:"block",overflowX:"auto",padding:"0.5em",background:"#1E1E1E",color:"#DCDCDC"},"hljs-keyword":{color:"#569CD6"},"hljs-literal":{color:"#569CD6"},"hljs-symbol":{color:"#569CD6"},"hljs-name":{color:"#569CD6"},"hljs-link":{color:"#569CD6",textDecoration:"underline"},"hljs-built_in":{color:"#4EC9B0"},"hljs-type":{color:"#4EC9B0"},"hljs-number":{color:"#B8D7A3"},"hljs-class":{color:"#B8D7A3"},"hljs-string":{color:"#D69D85"},"hljs-meta-string":{color:"#D69D85"},"hljs-regexp":{color:"#9A5334"},"hljs-template-tag":{color:"#9A5334"},"hljs-subst":{color:"#DCDCDC"},"hljs-function":{color:"#DCDCDC"},"hljs-title":{color:"#DCDCDC"},"hljs-params":{color:"#DCDCDC"},"hljs-formula":{color:"#DCDCDC"},"hljs-comment":{color:"#57A64A",fontStyle:"italic"},"hljs-quote":{color:"#57A64A",fontStyle:"italic"},"hljs-doctag":{color:"#608B4E"},"hljs-meta":{color:"#9B9B9B"},"hljs-meta-keyword":{color:"#9B9B9B"},"hljs-tag":{color:"#9B9B9B"},"hljs-variable":{color:"#BD63C5"},"hljs-template-variable":{color:"#BD63C5"},"hljs-attr":{color:"#9CDCFE"},"hljs-attribute":{color:"#9CDCFE"},"hljs-builtin-name":{color:"#9CDCFE"},"hljs-section":{color:"gold"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"},"hljs-bullet":{color:"#D7BA7D"},"hljs-selector-tag":{color:"#D7BA7D"},"hljs-selector-id":{color:"#D7BA7D"},"hljs-selector-class":{color:"#D7BA7D"},"hljs-selector-attr":{color:"#D7BA7D"},"hljs-selector-pseudo":{color:"#D7BA7D"},"hljs-addition":{backgroundColor:"#144212",display:"inline-block",width:"100%"},"hljs-deletion":{backgroundColor:"#600",display:"inline-block",width:"100%"}}}}]);