"use strict";(self.webpackChunkdata_structure_visualizer=self.webpackChunkdata_structure_visualizer||[]).push([[1535],{31535:(e,n,r)=>{r.r(n),r.d(n,{default:()=>Me});var t,o,i,a,d,s,l,c,h,m,u,p,g,w,f,b,x,A,y,S,v=r(57528),j=r(9950),k=r(44752),C=r(54826),W=r(42074),P=r(28925),T=r(80771),q=r(44414);const _=k.Ay.div(t||(t=(0,v.A)(["\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n"]))),E=k.Ay.div(o||(o=(0,v.A)(["\n  position: sticky;\n  top: 0;\n  background: ",";\n  padding: 1rem 0;\n  z-index: 100;\n"])),e=>{let{theme:n}=e;return n.colors.card}),I=k.Ay.div(i||(i=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n"]))),F=(0,k.Ay)(W.N_)(a||(a=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: ",";\n  font-size: 0.9rem;\n  margin-right: 1rem;\n  \n  &:hover {\n    color: #007bff;\n  }\n"])),e=>{let{theme:n}=e;return n.colors.text}),z=k.Ay.h1(d||(d=(0,v.A)(["\n  margin: 0;\n  font-size: 2rem;\n  color: ",";\n"])),e=>{let{theme:n}=e;return n.colors.text}),R=k.Ay.div(s||(s=(0,v.A)(["\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-top: 2rem;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n"]))),L=k.Ay.div(l||(l=(0,v.A)(["\n  background: ",";\n  border-radius: 8px;\n  padding: 1.5rem;\n  min-height: 400px;\n"])),e=>{let{theme:n}=e;return n.colors.gray100}),M=k.Ay.div(c||(c=(0,v.A)(["\n  margin-bottom: 1.5rem;\n  line-height: 1.5;\n"]))),N=k.Ay.button(h||(h=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  background: ",";\n  color: ",";\n  cursor: pointer;\n  transition: background 0.3s ease;\n  \n  &:hover {\n    background: ",";\n  }\n  \n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n"])),e=>{let{theme:n}=e;return n.colors.primary},e=>{let{theme:n}=e;return n.colors.card},e=>{let{theme:n}=e;return n.colors.primaryDark}),B=k.Ay.div(m||(m=(0,v.A)(["\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n"]))),O=k.Ay.div(u||(u=(0,v.A)(["\n  background: ",";\n  border-radius: 8px;\n  padding: 1.5rem;\n  overflow: auto;\n"])),e=>{let{theme:n}=e;return n.colors.gray100}),D=k.Ay.div(p||(p=(0,v.A)(["\n  margin-bottom: 2rem;\n"]))),H=k.Ay.div(g||(g=(0,v.A)(["\n  margin-bottom: 1rem;\n"]))),U=k.Ay.h3(w||(w=(0,v.A)(["\n  margin: 0 0 0.5rem 0;\n  color: ",";\n"])),e=>{let{theme:n}=e;return n.colors.text}),K=k.Ay.p(f||(f=(0,v.A)(["\n  margin: 0;\n  color: ",";\n  line-height: 1.5;\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),V=k.Ay.div(b||(b=(0,v.A)(["\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1rem;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n"]))),G=k.Ay.div(x||(x=(0,v.A)(["\n  background: ",";\n  padding: 1rem;\n  border-radius: 4px;\n"])),e=>{let{theme:n}=e;return n.colors.gray100}),Q=k.Ay.div(A||(A=(0,v.A)(["\n  font-size: 0.8rem;\n  color: ",";\n  margin-bottom: 0.5rem;\n"])),e=>{let{theme:n}=e;return n.colors.textLight}),$=k.Ay.div(y||(y=(0,v.A)(["\n  font-weight: bold;\n  color: ",";\n"])),e=>{let{theme:n}=e;return n.colors.text}),Z=k.Ay.div(S||(S=(0,v.A)(["\n  height: 300px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  position: relative;\n  overflow: hidden;\n"]))),J=e=>{let{algorithmInfo:n,visualizationComponent:r,problemDescription:t}=e;const[o,i]=(0,j.useState)("javascript");return(0,q.jsxs)(_,{children:[(0,q.jsxs)(E,{children:[(0,q.jsx)(I,{children:(0,q.jsx)(F,{to:"/algorithms/problems",children:"\u2190 Back to Problems"})}),(0,q.jsx)(z,{children:n.name})]}),(0,q.jsxs)(D,{children:[(0,q.jsxs)(H,{children:[(0,q.jsx)(U,{children:"Description"}),(0,q.jsx)(K,{children:n.description})]}),(0,q.jsxs)(M,{children:[(0,q.jsx)(U,{children:"Problem"}),(0,q.jsx)(K,{children:t})]}),(0,q.jsxs)(V,{children:[(0,q.jsxs)(G,{children:[(0,q.jsx)(Q,{children:"Best Case"}),(0,q.jsx)($,{children:n.timeComplexity.best})]}),(0,q.jsxs)(G,{children:[(0,q.jsx)(Q,{children:"Average Case"}),(0,q.jsx)($,{children:n.timeComplexity.average})]}),(0,q.jsxs)(G,{children:[(0,q.jsx)(Q,{children:"Worst Case"}),(0,q.jsx)($,{children:n.timeComplexity.worst})]})]}),(0,q.jsxs)(H,{children:[(0,q.jsx)(U,{children:"Space Complexity"}),(0,q.jsx)(K,{children:n.spaceComplexity})]})]}),(0,q.jsxs)(R,{children:[(0,q.jsxs)(L,{children:[(0,q.jsx)(Z,{children:r}),(0,q.jsxs)(B,{children:[(0,q.jsxs)(N,{children:[(0,q.jsx)(C.gSK,{}),"Play"]}),(0,q.jsxs)(N,{children:[(0,q.jsx)(C.kwt,{}),"Pause"]}),(0,q.jsxs)(N,{children:[(0,q.jsx)(C.FH8,{}),"Step"]}),(0,q.jsxs)(N,{children:[(0,q.jsx)(C.EEI,{}),"Reset"]})]})]}),(0,q.jsxs)(O,{children:[(0,q.jsx)(U,{children:"Implementation"}),(0,q.jsxs)("div",{children:[(0,q.jsx)(B,{children:Object.keys(n.implementations).map(e=>(0,q.jsx)(N,{onClick:()=>i(e),style:{background:o===e?"#007bff":"#6c757d"},children:e.charAt(0).toUpperCase()+e.slice(1)},e))}),(0,q.jsx)(P.A,{language:o,style:T.A,children:n.implementations[o]})]})]})]})]})};var X,Y,ee,ne,re;const te=k.Ay.div(X||(X=(0,v.A)(["\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  flex-wrap: wrap;\n  align-items: center;\n"]))),oe=k.Ay.button(Y||(Y=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  color: ",";\n  border: none;\n  border-radius: ",";\n  border: 1px solid ",";\n  cursor: pointer;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n"])),e=>e.theme.colors.primary,e=>{let{theme:n}=e;return n.colors.card},e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),ie=k.Ay.div(ee||(ee=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  min-width: 150px;\n"]))),ae=k.Ay.label(ne||(ne=(0,v.A)(["\n  font-size: 0.8rem;\n  margin-bottom: 0.25rem;\n  color: ",";\n"])),e=>e.theme.colors.textLight),de=k.Ay.input(re||(re=(0,v.A)(["\n  width: 100%;\n"]))),se=e=>{let{onStart:n,onPause:r,onReset:t,onStepForward:o,onStepBackward:i,onGenerateNew:a,onSpeedChange:d,isAnimating:s,isPaused:l,hasSteps:c,isFirstStep:h,isLastStep:m,currentSpeed:u,showNewButton:p=!1}=e;return(0,q.jsxs)(te,{children:[p&&(0,q.jsxs)(oe,{onClick:a,disabled:s&&!l,"aria-label":"Generate new graph",children:[(0,q.jsx)(C.dhv,{})," New Graph"]}),(0,q.jsxs)(oe,{onClick:n,disabled:s&&!l,"aria-label":"Start animation",children:[(0,q.jsx)(C.gSK,{})," Start"]}),(0,q.jsxs)(oe,{onClick:r,disabled:!s||l,"aria-label":"Pause animation",children:[(0,q.jsx)(C.kwt,{})," Pause"]}),(0,q.jsxs)(oe,{onClick:t,disabled:!c,"aria-label":"Reset animation",children:[(0,q.jsx)(C.EEI,{})," Reset"]}),(0,q.jsxs)(oe,{onClick:o,disabled:s||m,"aria-label":"Step forward",children:[(0,q.jsx)(C.FH8,{})," Next"]}),(0,q.jsxs)(oe,{onClick:i,disabled:s||h,"aria-label":"Step backward",children:[(0,q.jsx)(C.ttb,{})," Prev"]}),(0,q.jsxs)(ie,{children:[(0,q.jsx)(ae,{htmlFor:"speed-slider",children:"Animation Speed"}),(0,q.jsx)(de,{id:"speed-slider",type:"range",min:"0",max:"1000",value:2e3-u,onChange:e=>{const n=parseInt(e.target.value,10);d(2e3-n)},"aria-label":"Animation speed"})]})]})};var le=r(47289),ce=r(89379);function he(e,n){switch(n.type){case"SET_STEPS":return(0,ce.A)((0,ce.A)({},e),{},{steps:n.payload,currentStep:0,isAnimating:!1,isPaused:!1});case"SET_CURRENT_STEP":return(0,ce.A)((0,ce.A)({},e),{},{currentStep:n.payload});case"START_ANIMATION":return(0,ce.A)((0,ce.A)({},e),{},{isAnimating:!0,isPaused:!1});case"PAUSE_ANIMATION":return(0,ce.A)((0,ce.A)({},e),{},{isPaused:!0});case"RESET_ANIMATION":return(0,ce.A)((0,ce.A)({},e),{},{currentStep:0,isAnimating:!1,isPaused:!1});case"STEP_FORWARD":return(0,ce.A)((0,ce.A)({},e),{},{currentStep:Math.min(e.currentStep+1,e.steps.length-1)});case"STEP_BACKWARD":return(0,ce.A)((0,ce.A)({},e),{},{currentStep:Math.max(e.currentStep-1,0)});case"SET_ANIMATION_SPEED":return(0,ce.A)((0,ce.A)({},e),{},{animationSpeed:n.payload});default:return e}}const me=function(){const[e,n]=(0,j.useReducer)(he,{steps:[],currentStep:0,isAnimating:!1,isPaused:!1,animationSpeed:1e3});(0,j.useEffect)(()=>{let r;return e.isAnimating&&!e.isPaused&&e.currentStep<e.steps.length-1?r=setTimeout(()=>{n({type:"STEP_FORWARD"})},e.animationSpeed):e.currentStep>=e.steps.length-1&&n({type:"PAUSE_ANIMATION"}),()=>{r&&clearTimeout(r)}},[e.isAnimating,e.isPaused,e.currentStep,e.steps.length,e.animationSpeed]);const r=(0,j.useCallback)(e=>{n({type:"SET_STEPS",payload:e})},[]),t=(0,j.useCallback)(()=>{n({type:"START_ANIMATION"})},[]),o=(0,j.useCallback)(()=>{n({type:"PAUSE_ANIMATION"})},[]),i=(0,j.useCallback)(()=>{n({type:"RESET_ANIMATION"})},[]),a=(0,j.useCallback)(()=>{n({type:"STEP_FORWARD"})},[]),d=(0,j.useCallback)(()=>{n({type:"STEP_BACKWARD"})},[]),s=(0,j.useCallback)(e=>{n({type:"SET_ANIMATION_SPEED",payload:e})},[]);return{steps:e.steps,currentStep:e.currentStep,isAnimating:e.isAnimating,isPaused:e.isPaused,animationSpeed:e.animationSpeed,currentStepData:e.steps[e.currentStep],hasSteps:e.steps.length>0,isFirstStep:0===e.currentStep,isLastStep:e.currentStep===e.steps.length-1,setSteps:r,startAnimation:t,pauseAnimation:o,resetAnimation:i,stepForward:a,stepBackward:d,setAnimationSpeed:s}};var ue,pe,ge,we,fe,be,xe,Ae,ye,Se,ve,je;const ke=k.Ay.div(ue||(ue=(0,v.A)(["\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: center;\n"]))),Ce=k.Ay.div(pe||(pe=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  min-width: 200px;\n"]))),We=k.Ay.label(ge||(ge=(0,v.A)(["\n  font-size: 0.9rem;\n  color: ",";\n  font-weight: 500;\n"])),e=>e.theme.colors.textLight),Pe=k.Ay.div(we||(we=(0,v.A)(["\n  padding: 0.75rem 1.5rem;\n  margin: 0.5rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  color: ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n"])),e=>{switch(e.state){case"current":return e.theme.colors.primary;case"visited":return e.theme.colors.secondary;case"path":return e.theme.colors.success;case"start":return e.theme.colors.info;case"end":return e.theme.colors.warning;case"rejected":return e.theme.colors.danger;default:return e.theme.colors.background}},e=>"unvisited"===e.state?e.theme.colors.text:"white",e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),Te=k.Ay.span(fe||(fe=(0,v.A)(["\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background-color: ",";\n  transition: all 0.3s ease;\n  color: ",";\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n"])),e=>e.theme.colors.textLight,e=>{let{theme:n}=e;return n.colors.card}),qe=k.Ay.div(be||(be=(0,v.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 1.5rem 0;\n  width: 100%;\n"]))),_e=k.Ay.div(xe||(xe=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  color: ",";\n  margin: 0 0.5rem;\n"])),e=>e.theme.colors.textLight),Ee=k.Ay.div(Ae||(Ae=(0,v.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 0.75rem;\n  margin-top: 1.5rem;\n  padding: 1rem;\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: rgba(0, 0, 0, 0.02);\n  transition: all 0.3s ease;\n"])),e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),Ie=k.Ay.div(ye||(ye=(0,v.A)(["\n  margin-top: 1.5rem;\n  border-top: 1px solid ",";\n  padding-top: 1.5rem;\n"])),e=>e.theme.colors.border),Fe=(0,k.Ay)(le.fs)(Se||(Se=(0,v.A)(["\n  width: 300px;\n  height: 100px;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  padding: 0.75rem;\n  font-size: 0.9rem;\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),ze=k.Ay.div(ve||(ve=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0.5rem;\n"]))),Re=k.Ay.span(je||(je=(0,v.A)(["\n  font-size: 0.7rem;\n  margin-top: 0.25rem;\n  color: ",";\n  font-weight: bold;\n"])),e=>e.theme.colors.textLight),Le={name:"Word Ladder",description:"Word Ladder is a graph problem where we need to find the shortest transformation sequence from a start word to an end word, such that only one letter can be changed at a time, and each transformed word must exist in a given word list.",timeComplexity:{best:"O(n * m^2)",average:"O(n * m^2)",worst:"O(n * m^2)"},spaceComplexity:"O(n * m)",implementations:{javascript:"function ladderLength(beginWord, endWord, wordList) {\n  const wordSet = new Set(wordList);\n  \n  // If the end word is not in the dictionary, return 0\n  if (!wordSet.has(endWord)) return 0;\n  \n  // Create a queue for BFS\n  const queue = [];\n  queue.push({ word: beginWord, length: 1 });\n  \n  // To avoid visiting the same word again\n  const visited = new Set();\n  visited.add(beginWord);\n  \n  while (queue.length > 0) {\n    const { word, length } = queue.shift();\n    \n    // Try changing each character of the word\n    for (let i = 0; i < word.length; i++) {\n      // Try replacing the character with all letters\n      for (let c = 'a'.charCodeAt(0); c <= 'z'.charCodeAt(0); c++) {\n        const newChar = String.fromCharCode(c);\n        \n        // Skip if it's the same character\n        if (word[i] === newChar) continue;\n        \n        // Create a new word by replacing the character\n        const newWord = word.slice(0, i) + newChar + word.slice(i + 1);\n        \n        // If we reached the end word, return the length + 1\n        if (newWord === endWord) return length + 1;\n        \n        // If the word is in the dictionary and not visited\n        if (wordSet.has(newWord) && !visited.has(newWord)) {\n          visited.add(newWord);\n          queue.push({ word: newWord, length: length + 1 });\n        }\n      }\n    }\n  }\n  \n  // If no transformation sequence is found\n  return 0;\n}",python:"def ladder_length(begin_word, end_word, word_list):\n    word_set = set(word_list)\n    \n    # If the end word is not in the dictionary, return 0\n    if end_word not in word_set:\n        return 0\n    \n    # Create a queue for BFS\n    queue = [(begin_word, 1)]\n    \n    # To avoid visiting the same word again\n    visited = {begin_word}\n    \n    while queue:\n        word, length = queue.pop(0)\n        \n        # Try changing each character of the word\n        for i in range(len(word)):\n            # Try replacing the character with all letters\n            for c in 'abcdefghijklmnopqrstuvwxyz':\n                # Skip if it's the same character\n                if word[i] == c:\n                    continue\n                \n                # Create a new word by replacing the character\n                new_word = word[:i] + c + word[i+1:]\n                \n                # If we reached the end word, return the length + 1\n                if new_word == end_word:\n                    return length + 1\n                \n                # If the word is in the dictionary and not visited\n                if new_word in word_set and new_word not in visited:\n                    visited.add(new_word)\n                    queue.append((new_word, length + 1))\n    \n    # If no transformation sequence is found\n    return 0",java:"public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n    Set<String> wordSet = new HashSet<>(wordList);\n    \n    // If the end word is not in the dictionary, return 0\n    if (!wordSet.contains(endWord)) return 0;\n    \n    // Create a queue for BFS\n    Queue<Pair<String, Integer>> queue = new LinkedList<>();\n    queue.offer(new Pair<>(beginWord, 1));\n    \n    // To avoid visiting the same word again\n    Set<String> visited = new HashSet<>();\n    visited.add(beginWord);\n    \n    while (!queue.isEmpty()) {\n        Pair<String, Integer> current = queue.poll();\n        String word = current.getKey();\n        int length = current.getValue();\n        \n        // Try changing each character of the word\n        for (int i = 0; i < word.length(); i++) {\n            char[] wordChars = word.toCharArray();\n            \n            // Try replacing the character with all letters\n            for (char c = 'a'; c <= 'z'; c++) {\n                // Skip if it's the same character\n                if (word.charAt(i) == c) continue;\n                \n                wordChars[i] = c;\n                String newWord = new String(wordChars);\n                \n                // If we reached the end word, return the length + 1\n                if (newWord.equals(endWord)) return length + 1;\n                \n                // If the word is in the dictionary and not visited\n                if (wordSet.contains(newWord) && !visited.contains(newWord)) {\n                    visited.add(newWord);\n                    queue.offer(new Pair<>(newWord, length + 1));\n                }\n            }\n        }\n    }\n    \n    // If no transformation sequence is found\n    return 0;\n}",cpp:"int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n    unordered_set<string> wordSet(wordList.begin(), wordList.end());\n    \n    // If the end word is not in the dictionary, return 0\n    if (wordSet.find(endWord) == wordSet.end()) return 0;\n    \n    // Create a queue for BFS\n    queue<pair<string, int>> q;\n    q.push({beginWord, 1});\n    \n    // To avoid visiting the same word again\n    unordered_set<string> visited;\n    visited.insert(beginWord);\n    \n    while (!q.empty()) {\n        auto current = q.front(); q.pop();\n        string word = current.first;\n        int length = current.second;\n        \n        // Try changing each character of the word\n        for (int i = 0; i < word.size(); i++) {\n            char originalChar = word[i];\n            \n            // Try replacing the character with all letters\n            for (char c = 'a'; c <= 'z'; c++) {\n                // Skip if it's the same character\n                if (word[i] == c) continue;\n                \n                word[i] = c;\n                \n                // If we reached the end word, return the length + 1\n                if (word == endWord) return length + 1;\n                \n                // If the word is in the dictionary and not visited\n                if (wordSet.find(word) != wordSet.end() && visited.find(word) == visited.end()) {\n                    visited.insert(word);\n                    q.push({word, length + 1});\n                }\n            }\n            \n            // Revert the change\n            word[i] = originalChar;\n        }\n    }\n    \n    // If no transformation sequence is found\n    return 0;\n}"}},Me=()=>{const[e,n]=(0,j.useState)("hit"),[r,t]=(0,j.useState)("cog"),[o,i]=(0,j.useState)("hot,dot,dog,lot,log,cog"),a=me(),d=(0,j.useMemo)(()=>[{color:"#4299E1",label:"Start Word"},{color:"#ED8936",label:"End Word"},{color:"#4A5568",label:"Unvisited Word"},{color:"#3182CE",label:"Current Word"},{color:"#718096",label:"Visited Word"},{color:"#48BB78",label:"Path Word"},{color:"#E53E3E",label:"Rejected Word"}],[]),s=(0,j.useCallback)(()=>{if(!e||!r)return;const n=o.split(",").map(e=>e.trim()),t=new Set(n);if(!t.has(r))return void alert("End word must be in the word list!");const i=[],d=[];d.push({word:e,path:[e],level:1});const s=[];s.push({word:r,path:[r],level:1});const l=new Map;l.set(e,[e]);const c=new Map;c.set(r,[r]);const h=[];i.push({currentWord:e,visited:new Set([e]),queue:[...d],description:'Starting bidirectional BFS between "'.concat(e,'" and "').concat(r,'". This will search from both ends simultaneously.'),pathFound:!1,finalPath:null,rejected:[]});let m=null;for(;d.length>0&&s.length>0;){d[0].level;const n=d.length;for(let e=0;e<n;e++){const{word:o,path:u,level:p}=d.shift();if(!(null!==m&&u.length>=m.length))for(let g=0;g<o.length;g++)for(let w="a".charCodeAt(0);w<="z".charCodeAt(0);w++){const f=String.fromCharCode(w);if(o[g]===f)continue;const b=o.slice(0,g)+f+o.slice(g+1);if(l.has(b))continue;if(!t.has(b)&&b!==r){h.push({word:b,reason:"Not in dictionary"});continue}const x=[...u,b];if(c.has(b)){const r=c.get(b),t=[...x.slice(0,-1),...r.reverse()];if((null===m||t.length<m.length)&&(m=t),i.push({currentWord:b,visited:new Set([...Array.from(l.keys()),...Array.from(c.keys())]),queue:[],description:'Found meeting point at "'.concat(b,'"! Created path with length ').concat(t.length,"."),pathFound:!0,finalPath:t,rejected:[...h]}),e===n-1)return void a.setSteps(i)}d.push({word:b,path:x,level:p+1}),l.set(b,x),i.push({currentWord:b,visited:new Set([...Array.from(l.keys()),...Array.from(c.keys())]),queue:[...d,...s],description:'From start side: Visiting "'.concat(b,'" at level ').concat(p+1,"."),pathFound:!1,finalPath:null,rejected:[...h]})}}s[0].level;const o=s.length;for(let r=0;r<o;r++){const{word:n,path:u,level:p}=s.shift();if(!(null!==m&&u.length>=m.length))for(let g=0;g<n.length;g++)for(let w="a".charCodeAt(0);w<="z".charCodeAt(0);w++){const f=String.fromCharCode(w);if(n[g]===f)continue;const b=n.slice(0,g)+f+n.slice(g+1);if(c.has(b))continue;if(!t.has(b)&&b!==e){h.push({word:b,reason:"Not in dictionary"});continue}const x=[b,...u];if(l.has(b)){const e=[...l.get(b),...u.slice(1).reverse()];if((null===m||e.length<m.length)&&(m=e),i.push({currentWord:b,visited:new Set([...Array.from(l.keys()),...Array.from(c.keys())]),queue:[],description:'Found meeting point at "'.concat(b,'"! Created path with length ').concat(e.length,"."),pathFound:!0,finalPath:e,rejected:[...h]}),r===o-1)return void a.setSteps(i)}s.push({word:b,path:x,level:p+1}),c.set(b,x),i.push({currentWord:b,visited:new Set([...Array.from(l.keys()),...Array.from(c.keys())]),queue:[...d,...s],description:'From end side: Visiting "'.concat(b,'" at level ').concat(p+1,"."),pathFound:!1,finalPath:null,rejected:[...h]})}}}null===m&&i.push({currentWord:e,visited:new Set([...Array.from(l.keys()),...Array.from(c.keys())]),queue:[],description:'No transformation sequence found from "'.concat(e,'" to "').concat(r,'".'),pathFound:!1,finalPath:null,rejected:[...h]}),a.setSteps(i)},[e,r,o,a]),l=(0,q.jsxs)(le.C7,{children:[(0,q.jsxs)(ke,{children:[(0,q.jsxs)(Ce,{children:[(0,q.jsx)(We,{htmlFor:"begin-word",children:"Begin Word:"}),(0,q.jsx)(le.pd,{id:"begin-word",value:e,onChange:e=>n(e.target.value),disabled:a.isAnimating,"aria-label":"Begin word"})]}),(0,q.jsxs)(Ce,{children:[(0,q.jsx)(We,{htmlFor:"end-word",children:"End Word:"}),(0,q.jsx)(le.pd,{id:"end-word",value:r,onChange:e=>t(e.target.value),disabled:a.isAnimating,"aria-label":"End word"})]}),(0,q.jsxs)(Ce,{children:[(0,q.jsx)(We,{htmlFor:"word-list",children:"Word List (comma-separated):"}),(0,q.jsx)(Fe,{id:"word-list",value:o,onChange:e=>i(e.target.value),disabled:a.isAnimating,"aria-label":"Word list (comma-separated)"})]})]}),(0,q.jsx)(se,{onStart:()=>{0===a.steps.length?s():a.startAnimation()},onPause:a.pauseAnimation,onReset:a.resetAnimation,onStepForward:a.stepForward,onStepBackward:a.stepBackward,onSpeedChange:a.setAnimationSpeed,isAnimating:a.isAnimating,isPaused:a.isPaused,hasSteps:a.hasSteps,isFirstStep:a.isFirstStep,isLastStep:a.isLastStep,currentSpeed:a.animationSpeed}),(()=>{const n=a.currentStepData;return n?n.pathFound&&n.finalPath?(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(le.nM,{children:n.description}),(0,q.jsx)(qe,{children:n.finalPath.map((e,r)=>(0,q.jsxs)(j.Fragment,{children:[(0,q.jsxs)(Pe,{state:0===r?"start":r===n.finalPath.length-1?"end":"path","aria-label":"".concat(e," - ").concat(0===r?"start word":r===n.finalPath.length-1?"end word":"path word"),children:[e,(0,q.jsx)(Te,{children:r+1})]}),r<n.finalPath.length-1&&(0,q.jsx)(_e,{"aria-hidden":"true",children:(0,q.jsx)(C.Z0P,{})})]},r))})]}):(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(le.nM,{children:n.description}),(0,q.jsx)(qe,{children:(0,q.jsx)(Pe,{state:"current","aria-label":"Current word: ".concat(n.currentWord),children:n.currentWord})}),(0,q.jsxs)(le.jj,{children:[(0,q.jsx)("h4",{children:"Queue (Next Words to Process):"}),(0,q.jsxs)(qe,{children:[n.queue.map((e,n)=>(0,q.jsxs)(ze,{children:[(0,q.jsx)(Pe,{state:"unvisited","aria-label":"Queued word: ".concat(e.word,", level: ").concat(e.level),children:e.word}),(0,q.jsxs)(Re,{children:["Level: ",e.level]})]},n)).slice(0,10),n.queue.length>10&&(0,q.jsxs)("span",{children:["... and ",n.queue.length-10," more"]})]}),(0,q.jsx)("h4",{children:"Visited Words:"}),(0,q.jsx)(Ee,{children:Array.from(n.visited).map((t,o)=>(0,q.jsx)(Pe,{state:t===e?"start":t===r?"end":t===n.currentWord?"current":"visited","aria-label":"".concat(t," - ").concat(t===e?"start word":t===r?"end word":t===n.currentWord?"current word":"visited word"),children:t},o))}),n.rejected.length>0&&(0,q.jsxs)(Ie,{children:[(0,q.jsx)("h4",{children:"Rejected Words:"}),(0,q.jsxs)(Ee,{children:[n.rejected.slice(-10).map((e,n)=>(0,q.jsx)(Pe,{state:"rejected","aria-label":"Rejected word: ".concat(e.word,", reason: ").concat(e.reason),title:e.reason,children:e.word},n)),n.rejected.length>10&&(0,q.jsxs)("span",{children:["... and ",n.rejected.length-10," more"]})]})]})]})]}):(0,q.jsx)(le.nM,{children:'Configure the word ladder problem and click "Start" to see the visualization.'})})(),(0,q.jsx)(le.s$,{items:d})]});return(0,q.jsx)(J,{algorithmInfo:Le,visualizationComponent:l,problemDescription:'\nGiven two words, beginWord and endWord, and a dictionary wordList, find the length of the shortest transformation sequence from beginWord to endWord.\n\nRules for transformation:\n1. Only one letter can be changed at a time.\n2. Each transformed word must exist in the wordList.\n3. beginWord is not a part of wordList, but endWord is.\n\nFor example, given:\n- beginWord = "hit"\n- endWord = "cog"\n- wordList = ["hot", "dot", "dog", "lot", "log", "cog"]\n\nThe shortest transformation sequence would be: "hit" -> "hot" -> "dot" -> "dog" -> "cog"\nSo the length of the shortest transformation sequence is 5.\n\nThe algorithm uses a breadth-first search (BFS) approach to find the shortest path from beginWord to endWord. For each word, it tries changing each character to every possible letter and checks if the new word exists in the dictionary and hasn\'t been visited yet.\n'})}},47289:(e,n,r)=>{r.d(n,{C7:()=>C,fs:()=>z,jj:()=>P,nM:()=>W,pd:()=>F,s$:()=>I});var t,o,i,a,d,s,l,c,h,m,u,p,g,w,f,b,x,A,y,S,v=r(57528),j=(r(9950),r(44752)),k=r(44414);const C=j.Ay.div(t||(t=(0,v.A)(["\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n"]))),W=(j.Ay.div(o||(o=(0,v.A)(["\n  width: 100%;\n  margin-top: 1rem;\n  height: 60vh;\n  min-height: 400px;\n  max-height: 600px;\n  position: relative;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  overflow: hidden;\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),j.Ay.canvas(i||(i=(0,v.A)(["\n  display: block;\n  width: 100%;\n  height: 100%;\n"]))),j.Ay.div(a||(a=(0,v.A)(["\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  border-radius: ",";\n  border: 1px solid ",";\n  width: 100%;\n  max-width: 800px;\n  text-align: center;\n"])),e=>e.theme.colors.card,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border})),P=j.Ay.div(d||(d=(0,v.A)(["\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  border-radius: ",";\n  border: 1px solid ",";\n  width: 100%;\n  max-width: 800px;\n"])),e=>e.theme.colors.card,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border}),T=(j.Ay.h3(s||(s=(0,v.A)(["\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid ",";\n"])),e=>e.theme.colors.border),j.Ay.p(l||(l=(0,v.A)(["\n  font-size: 0.9rem;\n  line-height: 1.5;\n  color: ",";\n  margin-bottom: 0.5rem;\n"])),e=>e.theme.colors.textLight),j.Ay.div(c||(c=(0,v.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n  padding: 0.5rem 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  border-radius: ",";\n  border: 1px solid ",";\n  box-shadow: ",";\n"])),e=>e.theme.colors.card,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.shadows.sm)),q=j.Ay.div(h||(h=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n"]))),_=j.Ay.div(m||(m=(0,v.A)(["\n  width: 1rem;\n  height: 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  border-radius: 3px;\n  border: 1px solid ",";\n"])),e=>e.bgColor,e=>e.theme.colors.border),E=j.Ay.span(u||(u=(0,v.A)(["\n  font-size: 0.875rem;\n  color: ",";\n"])),e=>e.theme.colors.text),I=e=>{let{items:n}=e;return(0,k.jsx)(T,{children:n.map((e,n)=>(0,k.jsxs)(q,{children:[(0,k.jsx)(_,{bgColor:e.color}),(0,k.jsx)(E,{children:e.label})]},n))})},F=(j.Ay.div(p||(p=(0,v.A)(["\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  padding: 1rem;\n  border-radius: ",";\n  border: 1px solid ",";\n  box-shadow: ",";\n"])),e=>e.theme.colors.card,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.shadows.sm),j.Ay.div(g||(g=(0,v.A)(["\n  padding: 1rem;\n  background-color: ",";\n  transition: all 0.3s ease;\n  border-radius: ",";\n  border: 1px solid ",";\n  box-shadow: ",";\n  margin-top: 1rem;\n  text-align: center;\n  font-weight: 500;\n"])),e=>e.theme.colors.card,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.shadows.sm),j.Ay.div(w||(w=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n  font-size: 0.875rem;\n  color: ",";\n"])),e=>e.theme.colors.textLight),j.Ay.div(f||(f=(0,v.A)(["\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-left: auto;\n"]))),j.Ay.label(b||(b=(0,v.A)(["\n  font-size: 0.875rem;\n  color: ",";\n  white-space: nowrap;\n"])),e=>e.theme.colors.text),j.Ay.input(x||(x=(0,v.A)(["\n  width: 100px;\n"]))),j.Ay.select(A||(A=(0,v.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  background-color: ",";\n  transition: all 0.3s ease;\n  color: ",";\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border},e=>e.theme.colors.card,e=>e.theme.colors.text),j.Ay.input(y||(y=(0,v.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  width: 150px;\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border})),z=j.Ay.textarea(S||(S=(0,v.A)(["\n  padding: 0.5rem;\n  border: 1px solid ",";\n  border-radius: ",";\n  border: 1px solid ",";\n  width: 100%;\n  min-height: 100px;\n  font-family: monospace;\n"])),e=>e.theme.colors.border,e=>e.theme.borderRadius,e=>{let{theme:n}=e;return n.colors.border})},80771:(e,n,r)=>{r.d(n,{A:()=>t});const t={'code[class*="language-"]':{color:"#ccc",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",fontSize:"1em",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#ccc",background:"#2d2d2d",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",fontSize:"1em",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto"},':not(pre) > code[class*="language-"]':{background:"#2d2d2d",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},comment:{color:"#999"},"block-comment":{color:"#999"},prolog:{color:"#999"},doctype:{color:"#999"},cdata:{color:"#999"},punctuation:{color:"#ccc"},tag:{color:"#e2777a"},"attr-name":{color:"#e2777a"},namespace:{color:"#e2777a"},deleted:{color:"#e2777a"},"function-name":{color:"#6196cc"},boolean:{color:"#f08d49"},number:{color:"#f08d49"},function:{color:"#f08d49"},property:{color:"#f8c555"},"class-name":{color:"#f8c555"},constant:{color:"#f8c555"},symbol:{color:"#f8c555"},selector:{color:"#cc99cd"},important:{color:"#cc99cd",fontWeight:"bold"},atrule:{color:"#cc99cd"},keyword:{color:"#cc99cd"},builtin:{color:"#cc99cd"},string:{color:"#7ec699"},char:{color:"#7ec699"},"attr-value":{color:"#7ec699"},regex:{color:"#7ec699"},variable:{color:"#7ec699"},operator:{color:"#67cdcc"},entity:{color:"#67cdcc",cursor:"help"},url:{color:"#67cdcc"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},inserted:{color:"green"}}}}]);